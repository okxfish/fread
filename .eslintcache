[{"D:\\workspace\\fread\\src\\index.tsx":"1","D:\\workspace\\fread\\src\\reportWebVitals.ts":"2","D:\\workspace\\fread\\src\\App.tsx":"3","D:\\workspace\\fread\\src\\page\\home\\index.tsx":"4","D:\\workspace\\fread\\src\\component\\overviewPane\\index.tsx":"5","D:\\workspace\\fread\\src\\component\\feedsPane\\index.tsx":"6","D:\\workspace\\fread\\src\\component\\articlePane\\index.tsx":"7","D:\\workspace\\fread\\src\\component\\feedsPane\\container.tsx":"8","D:\\workspace\\fread\\src\\component\\feedsPane\\component.tsx":"9","D:\\workspace\\fread\\src\\mock\\feed.ts":"10"},{"size":589,"mtime":1609139171362,"results":"11","hashOfConfig":"12"},{"size":440,"mtime":1608688701570,"results":"13","hashOfConfig":"12"},{"size":515,"mtime":1609406355832,"results":"14","hashOfConfig":"12"},{"size":5011,"mtime":1610010597397,"results":"15","hashOfConfig":"12"},{"size":4777,"mtime":1610010732506,"results":"16","hashOfConfig":"12"},{"size":77,"mtime":1609117670463,"results":"17","hashOfConfig":"12"},{"size":5571,"mtime":1609997642066,"results":"18","hashOfConfig":"12"},{"size":4437,"mtime":1609325438910,"results":"19","hashOfConfig":"12"},{"size":5308,"mtime":1610002920071,"results":"20","hashOfConfig":"12"},{"size":835,"mtime":1609380765458,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"g8k65s",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\workspace\\fread\\src\\index.tsx",[],["44","45"],"D:\\workspace\\fread\\src\\reportWebVitals.ts",[],"D:\\workspace\\fread\\src\\App.tsx",[],"D:\\workspace\\fread\\src\\page\\home\\index.tsx",["46"],"D:\\workspace\\fread\\src\\component\\overviewPane\\index.tsx",["47","48"],"D:\\workspace\\fread\\src\\component\\feedsPane\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\articlePane\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\feedsPane\\container.tsx",[],"D:\\workspace\\fread\\src\\component\\feedsPane\\component.tsx",["49","50","51","52"],"import { default as React, Dispatch } from \"react\";\r\nimport {\r\n  Text,\r\n  Image,\r\n  ImageFit,\r\n  IconButton,\r\n  IIconProps,\r\n  Panel,\r\n  PanelType,\r\n  IContextualMenuProps,\r\n  FontIcon,\r\n  IGroup,\r\n  IImageProps,\r\n  GroupedList,\r\n  IGroupRenderProps,\r\n  IGroupHeaderProps,\r\n} from \"office-ui-fabric-react\";\r\nimport { FeedProps } from \"./types\";\r\nexport interface Props {\r\n  className?: string;\r\n  onClickFeed?(): any;\r\n  items: FeedProps[];\r\n  groups: IGroup[];\r\n  isSidePaneOpen: boolean;\r\n  dispatch: Dispatch<any>;\r\n}\r\n\r\nconst moreIcon: IIconProps = { iconName: \"More\" };\r\nconst favoriteStarIcon: IIconProps = { iconName: \"FavoriteStar\" };\r\nconst favoriteStarFillIcon: IIconProps = { iconName: \"FavoriteStarFill\" };\r\nconst pinSolid12Icon: IIconProps = { iconName: \"PinSolid12\" };\r\nconst pinSolidOff12Icon: IIconProps = { iconName: \"PinSolidOff12\" };\r\nconst readingModeIcon: IIconProps = { iconName: \"ReadingMode\" };\r\nconst readingModeSolidIcon: IIconProps = { iconName: \"ReadingModeSolid\" };\r\nconst menuProps: IContextualMenuProps = {\r\n  items: [\r\n    {\r\n      key: \"emailMessage\",\r\n      text: \"Email message\",\r\n      iconProps: { iconName: \"Mail\" },\r\n    },\r\n    {\r\n      key: \"calendarEvent\",\r\n      text: \"Calendar event\",\r\n      iconProps: { iconName: \"Calendar\" },\r\n    },\r\n  ],\r\n  directionalHintFixed: true,\r\n};\r\n\r\nconst FeedsPane = ({\r\n  className,\r\n  items,\r\n  groups,\r\n  onClickFeed,\r\n  isSidePaneOpen,\r\n  dispatch,\r\n}: Props) => {\r\n  const onRenderCell = (\r\n    nestingDepth?: number,\r\n    item?: FeedProps,\r\n    itemIndex?: number\r\n  ): React.ReactNode => {\r\n    const imageProps: IImageProps = {\r\n      src: item?.thumbnailSrc,\r\n      maximizeFrame: true,\r\n      imageFit: ImageFit.cover,\r\n    };\r\n\r\n    const toggleIsReadById = (id: string, e: any): void => {\r\n      e.stopPropagation();\r\n      dispatch({ type: \"feed/ById/toggleIsRead\", payload: id });\r\n    };\r\n\r\n    const toggleIsStarById = (id: string, e: any): void => {\r\n      e.stopPropagation();\r\n      dispatch({ type: \"feed/ById/toggleIsStar\", payload: id });\r\n    };\r\n\r\n    const toggleIsPinById = (id: string, e: any): void => {\r\n      e.stopPropagation();\r\n      dispatch({ type: \"feed/ById/toggleIsPin\", payload: id });\r\n    };\r\n\r\n    return item && typeof itemIndex === \"number\" && itemIndex > -1 ? (\r\n      <div\r\n        className=\"flex-wrap md:flex md:flex-nowrap border-b border-gray-300 pt-4 pb-4 cursor-pointer group hover:bg-gray-200\"\r\n        onClick={onClickFeed}\r\n      >\r\n        <div className=\"flex-shrink-0 w-full h-48 md:w-32 md:h-32 mb-4 md:mr-4\">\r\n          <Image className=\"mr-3 rounded-md\" {...imageProps} />\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <div className=\"relative flex items-start mb-2 text-lg text-gray-800 leading-none font-medium\">\r\n            <span className=\"flex-1\">{item.title}</span>\r\n          </div>\r\n          <div className=\"text-base text-gray-600\">{item.summary}</div>\r\n          <div className=\"flex items-center justify-end w-full\">\r\n            <div className=\"flex-1 text-sm text-gray-400\">\r\n              <span className=\"pr-1\">{item.sourceName}</span>\r\n              <span>/</span>\r\n              <span className=\"pl-1\">{item.time}</span>\r\n            </div>\r\n            <IconButton\r\n              className=\"focus:outline-none\"\r\n              iconProps={item.isPin ? pinSolid12Icon : pinSolidOff12Icon}\r\n              title=\"pin as unread\"\r\n              ariaLabel=\"Pin as unread\"\r\n              disabled={false}\r\n              onClick={toggleIsPinById.bind(null, item.key)}\r\n            />\r\n            <IconButton\r\n              className=\"focus:outline-none\"\r\n              iconProps={item.isStar ? favoriteStarFillIcon : favoriteStarIcon}\r\n              title=\"favorite\"\r\n              ariaLabel=\"Favorite\"\r\n              disabled={false}\r\n              onClick={toggleIsStarById.bind(null, item.key)}\r\n            />\r\n            <IconButton\r\n              className=\"focus:outline-none\"\r\n              iconProps={item.isRead ? readingModeSolidIcon : readingModeIcon}\r\n              title=\"mark as read\"\r\n              ariaLabel=\"Mark as read\"\r\n              disabled={false}\r\n              onClick={toggleIsReadById.bind(null, item.key)}\r\n            />\r\n            <IconButton\r\n              className=\"focus:outline-none\"\r\n              menuProps={menuProps}\r\n              iconProps={moreIcon}\r\n              onRenderMenuIcon={() => null}\r\n              title=\"more\"\r\n              ariaLabel=\"More\"\r\n              disabled={false}\r\n              checked={false}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  const onRenderHeader = (props?: IGroupHeaderProps): JSX.Element | null => {\r\n    if (props && props.group) {\r\n      return (\r\n        <div className=\"cursor-pointer text-gray-600 text-lg font-bold leading-loose border-b border-gray-600\">\r\n          {props.group!.name}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const groupProps: IGroupRenderProps = {\r\n    onRenderHeader: onRenderHeader,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GroupedList\r\n        className={`${className} px-6`}\r\n        items={items}\r\n        onRenderCell={onRenderCell}\r\n        groupProps={groupProps}\r\n        groups={groups}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedsPane;\r\n","D:\\workspace\\fread\\src\\mock\\feed.ts",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":21},{"ruleId":"57","severity":1,"message":"61","line":39,"column":7,"nodeType":"59","messageId":"60","endLine":39,"endColumn":46},{"ruleId":"62","severity":1,"message":"63","line":51,"column":11,"nodeType":"64","messageId":"65","endLine":51,"endColumn":51,"fix":"66"},{"ruleId":"57","severity":1,"message":"67","line":3,"column":3,"nodeType":"59","messageId":"60","endLine":3,"endColumn":7},{"ruleId":"57","severity":1,"message":"68","line":8,"column":3,"nodeType":"59","messageId":"60","endLine":8,"endColumn":8},{"ruleId":"57","severity":1,"message":"69","line":9,"column":3,"nodeType":"59","messageId":"60","endLine":9,"endColumn":12},{"ruleId":"57","severity":1,"message":"70","line":11,"column":3,"nodeType":"59","messageId":"60","endLine":11,"endColumn":11},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'feedsMockData' is defined but never used.","Identifier","unusedVar","'commandBarItems' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"data-automation-id\"] found.","Property","unnecessarilyComputedProperty",{"range":"73","text":"74"},"'Text' is defined but never used.","'Panel' is defined but never used.","'PanelType' is defined but never used.","'FontIcon' is defined but never used.","no-global-assign","no-unsafe-negation",[1520,1542],"\"data-automation-id\""]