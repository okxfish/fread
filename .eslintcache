[{"D:\\workspace\\fread\\src\\index.tsx":"1","D:\\workspace\\fread\\src\\reportWebVitals.ts":"2","D:\\workspace\\fread\\src\\App.tsx":"3","D:\\workspace\\fread\\src\\page\\home\\index.tsx":"4","D:\\workspace\\fread\\src\\component\\overviewPane\\index.tsx":"5","D:\\workspace\\fread\\src\\component\\feedsPane\\index.tsx":"6","D:\\workspace\\fread\\src\\component\\articlePane\\index.tsx":"7","D:\\workspace\\fread\\src\\component\\feedsPane\\container.tsx":"8","D:\\workspace\\fread\\src\\component\\feedsPane\\component.tsx":"9","D:\\workspace\\fread\\src\\mock\\feed.ts":"10","D:\\workspace\\fread\\src\\page\\feed\\index.tsx":"11","D:\\workspace\\fread\\src\\component\\overviewPane\\overviewCell.tsx":"12","D:\\workspace\\fread\\src\\page\\home\\sideBarItem.tsx":"13","D:\\workspace\\fread\\src\\utils\\useSearchParma.tsx":"14","D:\\workspace\\fread\\src\\component\\animationPane\\index.tsx":"15","D:\\workspace\\fread\\src\\component\\feedsPane\\feedItem.tsx":"16","D:\\workspace\\fread\\src\\page\\home\\sideBar.tsx":"17","D:\\workspace\\fread\\src\\context\\viewType.ts":"18","D:\\workspace\\fread\\src\\page\\feed\\container.tsx":"19","D:\\workspace\\fread\\src\\context\\feed.ts":"20","D:\\workspace\\fread\\src\\context\\article.ts":"21","D:\\workspace\\fread\\src\\page\\feed\\reducer.ts":"22","D:\\workspace\\fread\\src\\page\\feed\\component.tsx":"23","D:\\workspace\\fread\\src\\component\\bookFilp\\index.tsx":"24"},{"size":463,"mtime":1612151054295,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1608688701570,"results":"27","hashOfConfig":"26"},{"size":1684,"mtime":1612174398408,"results":"28","hashOfConfig":"26"},{"size":928,"mtime":1612144018193,"results":"29","hashOfConfig":"26"},{"size":5097,"mtime":1612144018188,"results":"30","hashOfConfig":"26"},{"size":63,"mtime":1612144018187,"results":"31","hashOfConfig":"26"},{"size":1688,"mtime":1612144018162,"results":"32","hashOfConfig":"26"},{"size":2344,"mtime":1612144018186,"results":"33","hashOfConfig":"26"},{"size":4557,"mtime":1612144018164,"results":"34","hashOfConfig":"26"},{"size":862,"mtime":1611039735445,"results":"35","hashOfConfig":"26"},{"size":63,"mtime":1612144018192,"results":"36","hashOfConfig":"26"},{"size":775,"mtime":1612144018189,"results":"37","hashOfConfig":"26"},{"size":1337,"mtime":1612144018194,"results":"38","hashOfConfig":"26"},{"size":993,"mtime":1610522713288,"results":"39","hashOfConfig":"26"},{"size":1884,"mtime":1612144018154,"results":"40","hashOfConfig":"26"},{"size":10507,"mtime":1612144018186,"results":"41","hashOfConfig":"26"},{"size":4886,"mtime":1612144018193,"results":"42","hashOfConfig":"26"},{"size":182,"mtime":1612144018190,"results":"43","hashOfConfig":"26"},{"size":3666,"mtime":1612144018191,"results":"44","hashOfConfig":"26"},{"size":90,"mtime":1612144018190,"results":"45","hashOfConfig":"26"},{"size":93,"mtime":1612144018189,"results":"46","hashOfConfig":"26"},{"size":2827,"mtime":1612144018192,"results":"47","hashOfConfig":"26"},{"size":3316,"mtime":1612144018191,"results":"48","hashOfConfig":"26"},{"size":775,"mtime":1612165981014,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xugnkc",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},"D:\\workspace\\fread\\src\\index.tsx",[],"D:\\workspace\\fread\\src\\reportWebVitals.ts",[],["102","103"],"D:\\workspace\\fread\\src\\App.tsx",[],"D:\\workspace\\fread\\src\\page\\home\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\overviewPane\\index.tsx",["104","105"],"import React from \"react\";\r\nimport {\r\n  GroupedList,\r\n  IGroupRenderProps,\r\n  IGroupHeaderProps,\r\n  CommandBarButton,\r\n  IIconProps,\r\n  FontIcon,\r\n  SelectionMode,\r\n  IContextualMenuProps,\r\n} from \"office-ui-fabric-react\";\r\nimport { createGroups } from \"@fluentui/example-data\";\r\nimport OverviewCell from \"./overviewCell\";\r\nimport \"./style.css\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\n\r\nexport interface Props {\r\n  className?: string;\r\n}\r\n\r\nconst groupCount = 5;\r\nconst groupDepth = 1;\r\nconst createItems = (count: number): any[] => {\r\n  return Array.from({\r\n    length: count,\r\n  }).map((item: any, index: number): any => ({\r\n    key: index,\r\n    unreadCount: 2,\r\n    title: `this is rss source: ${index}`,\r\n  }));\r\n};\r\n\r\nconst items: any[] = createItems(Math.pow(groupCount, groupDepth + 1));\r\nconst groups = createGroups(groupCount, groupDepth, 0, groupCount);\r\nconst listItemClassName =\r\n  \"cursor-pointer items-center h-10 text-base flex hover:bg-gray-200 select-none\";\r\n\r\nconst moreIcon: IIconProps = { iconName: \"More\" };\r\n\r\nconst menuProps: IContextualMenuProps = {\r\n  items: [\r\n    {\r\n      key: \"emailMessage\",\r\n      text: \"rename\",\r\n      iconProps: { iconName: \"Edit\" },\r\n    },\r\n    {\r\n      key: \"calendarEvent\",\r\n      text: \"Calendar event\",\r\n      iconProps: { iconName: \"Calendar\" },\r\n    },\r\n  ],\r\n};\r\n\r\nconst OverviewPane = ({ className }: Props) => {\r\n  const history = useHistory();\r\n  const routeMatch = useRouteMatch();\r\n  const location = useLocation();\r\n  const commonPx = \"px-2\";\r\n\r\n  const onRenderCell = (\r\n    nestingDepth?: number,\r\n    item?: any,\r\n    itemIndex?: number\r\n  ): React.ReactNode => {\r\n    const onClick = () => history.push(`/feed/source?sourceName=${item.title}`);\r\n    return item && typeof itemIndex === \"number\" && itemIndex > -1 ? (\r\n      <div\r\n        className={`${listItemClassName} hover:bg-gray-300`}\r\n        style={{ paddingLeft: `${2 * (nestingDepth || 1)}rem` }}\r\n        onClick={onClick}\r\n      >\r\n        <FontIcon className=\"mr-2\" iconName=\"Dictionary\" />\r\n        {item.title}\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  const groupProps: IGroupRenderProps = {\r\n    onRenderHeader: (props?: IGroupHeaderProps): JSX.Element | null => {\r\n      if (props && props.group) {\r\n        const toggleCollapse = (): void => {\r\n          props.onToggleCollapse!(props.group!);\r\n        };\r\n\r\n        let unreadCount: number = 0;\r\n        const children = items.slice(\r\n          props.group.startIndex,\r\n          props.group.startIndex + props.group.count\r\n        );\r\n        children.forEach((item) => {\r\n          unreadCount += item.unreadCount;\r\n        });\r\n        return (\r\n          <div className={`${listItemClassName} ${commonPx} hover:bg-gray-300`}>\r\n            <FontIcon\r\n              className={`mr-2 transition-all transform ${\r\n                props.group!.isCollapsed ? \"\" : \"rotate-90\"\r\n              }`}\r\n              iconName=\"ChevronRight\"\r\n              onClick={toggleCollapse}\r\n            />\r\n            <span className=\"flex-1\" onClick={toggleCollapse}>\r\n              {props.group!.name} ({unreadCount})\r\n            </span>\r\n            <CommandBarButton\r\n              className=\"bg-transparent hover:bg-transparent focus:bg-transparent focus:outline-none min-w-0\"\r\n              menuProps={menuProps}\r\n              iconProps={moreIcon}\r\n              onRenderMenuIcon={() => null}\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={`${className} flex-1 flex flex-col min-h-0 cursor-pointer`}>\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"PreviewLink\" }}\r\n        content=\"All\"\r\n        onClick={()=>history.push('/feed/all')}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"FavoriteStar\" }}\r\n        content=\"Star\"\r\n        onClick={()=>history.push('/feed/star')}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"Archive\" }}\r\n        content=\"Archive\"\r\n        onClick={()=>history.push('/feed/archive')}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"Source\" }}\r\n        content=\"Source\"\r\n        onFooterRender={() => (\r\n          <CommandBarButton\r\n            className=\"bg-transparent hover:bg-transparent focus:bg-transparent focus:outline-none min-w-0\"\r\n            menuProps={menuProps}\r\n            iconProps={moreIcon}\r\n            onRenderMenuIcon={() => null}\r\n          />\r\n        )}\r\n      />\r\n      <GroupedList\r\n        className=\"flex-1 border-b border-t border-gray-400 overflow-y-auto scrollbar\"\r\n        items={items}\r\n        onRenderCell={onRenderCell}\r\n        groupProps={groupProps}\r\n        selectionMode={SelectionMode.none}\r\n        groups={groups}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewPane;\r\n","D:\\workspace\\fread\\src\\component\\feedsPane\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\articlePane\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\feedsPane\\container.tsx",[],"D:\\workspace\\fread\\src\\component\\feedsPane\\component.tsx",[],"D:\\workspace\\fread\\src\\mock\\feed.ts",[],"D:\\workspace\\fread\\src\\page\\feed\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\overviewPane\\overviewCell.tsx",[],"D:\\workspace\\fread\\src\\page\\home\\sideBarItem.tsx",[],"D:\\workspace\\fread\\src\\utils\\useSearchParma.tsx",[],"D:\\workspace\\fread\\src\\component\\animationPane\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\feedsPane\\feedItem.tsx",[],"D:\\workspace\\fread\\src\\page\\home\\sideBar.tsx",[],"D:\\workspace\\fread\\src\\context\\viewType.ts",[],"D:\\workspace\\fread\\src\\page\\feed\\container.tsx",["106"],"import React, { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useSearchParam } from \"../../utils/useSearchParma\";\r\n\r\nimport { ViewTypeContext, ViewType } from \"../../context/viewType\";\r\nimport { ArticleContext } from \"../../context/article\";\r\nimport { FeedContext } from \"../../context/feed\";\r\n\r\nimport FeedPageComponent from \"./component\";\r\nimport { FeedProps } from \"../../component/feedsPane/types\";\r\n\r\nimport Parser from \"rss-parser\";\r\n\r\nimport { initState, reducer } from \"./reducer\";\r\n\r\nexport interface Props {\r\n  className?: string;\r\n  onClickFeed(e: FeedProps): any;\r\n}\r\n\r\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\r\nconst RSS_SRC = \"https://rsshub.app/readhub/category/daily\";\r\nconst _RSS_SRC = \"http://feeds.feedburner.com/ruanyifeng\";\r\n\r\nconst parser: Parser<any, any> = new Parser();\r\n\r\nconst FeedContainer = ({ className, ...rest }: Props) => {\r\n  const [state, dispatch] = useReducer(reducer, initState);\r\n  const [isArticleModalOpen, setIsArticleModalOpen] = useState<boolean>(false);\r\n  const [isOverViewPaneOpen, setIsOverViewPaneOpen] = useState<boolean>(false);\r\n  const [feedsData, setFeedsData] = useState([{ content: \"\", title: \"\" }]);\r\n  const { viewType } = useContext(ViewTypeContext);\r\n\r\n  const location = useLocation();\r\n\r\n  const openOverviewPane = () => setIsOverViewPaneOpen(true);\r\n  const closeOverviewPane = () => setIsOverViewPaneOpen(false);\r\n  const openArticleModal = () => setIsArticleModalOpen(true);\r\n  const closeArticleModal = () => setIsArticleModalOpen(false);\r\n\r\n  const articleIndex = parseInt(\r\n    useSearchParam(\"articleIndex\", location) || \"0\",\r\n    10\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const feed = await parser.parseURL(CORS_PROXY + RSS_SRC);\r\n        setFeedsData(feed.items);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    closeOverviewPane();\r\n  }, [location.search]);\r\n\r\n  const onClickFeed = (e: FeedProps): any => {\r\n    const prevActivedFeedId = state.currenActivedFeedId;\r\n    dispatch({ type: \"feed/ById/changeCurrentActivedFeedId\", payload: e.key });\r\n    dispatch({ type: \"feed/ById/markAsRead\", payload: e.key });\r\n    if (viewType === ViewType.list) {\r\n      if (\r\n        prevActivedFeedId &&\r\n        prevActivedFeedId !== e.key &&\r\n        state.feeds.byId[prevActivedFeedId] &&\r\n        state.feeds.byId[prevActivedFeedId].isInnerArticleShow\r\n      ) {\r\n        dispatch({ type: \"feed/ById/hideInnerArticle\", payload: prevActivedFeedId });\r\n      }\r\n\r\n      if (e.isInnerArticleShow) {\r\n        dispatch({ type: \"feed/ById/hideInnerArticle\", payload: e.key });\r\n      } else {\r\n        dispatch({ type: \"feed/ById/showInnerArticle\", payload: e.key });\r\n      }\r\n    } else if (viewType !== ViewType.threeway) {\r\n      openArticleModal();\r\n    }\r\n  };\r\n\r\n  const article = feedsData[articleIndex];\r\n\r\n  return (\r\n    <FeedContext.Provider value={{ state, dispatch }}>\r\n      <ArticleContext.Provider value={feedsData[articleIndex]}>\r\n        <FeedPageComponent\r\n          className={className}\r\n          article={article}\r\n          viewType={viewType}\r\n          isArticleModalOpen={isArticleModalOpen}\r\n          isOverViewPaneOpen={isOverViewPaneOpen}\r\n          onClickFeed={onClickFeed}\r\n          openOverviewPane={openOverviewPane}\r\n          closeOverviewPane={closeOverviewPane}\r\n          openArticleModal={openArticleModal}\r\n          closeArticleModal={closeArticleModal}\r\n        />\r\n      </ArticleContext.Provider>\r\n    </FeedContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FeedContainer;\r\n","D:\\workspace\\fread\\src\\context\\feed.ts",[],"D:\\workspace\\fread\\src\\context\\article.ts",[],"D:\\workspace\\fread\\src\\page\\feed\\reducer.ts",[],"D:\\workspace\\fread\\src\\page\\feed\\component.tsx",[],"D:\\workspace\\fread\\src\\component\\bookFilp\\index.tsx",["107"],"import React, { useEffect } from \"react\";\nimport { useInterval, useToggle } from \"react-use\";\nimport \"./style.css\";\n\nconst BookFilp = () => {\n  const [isFilpEnd, toggle] = useToggle(false);\n\n  useEffect(() => {\n    toggle();\n  }, []);\n\n  useInterval(() => {\n    toggle();\n  }, 167 * 7);\n\n  return (\n    <div className={`book ${isFilpEnd ? \"filp-end\" : \"\"}`}>\n      <div className=\"back bg-gray-500\"></div>\n      <div className=\"book-page page6\"></div>\n      <div className=\"book-page page5\"></div>\n      <div className=\"book-page page4\"></div>\n      <div className=\"book-page page3\"></div>\n      <div className=\"book-page page2\"></div>\n      <div className=\"book-page page1\"></div>\n      <div className=\"front bg-gray-500\"></div>\n    </div>\n  );\n};\n\nexport default BookFilp;\n",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":57,"column":9,"nodeType":"114","messageId":"115","endLine":57,"endColumn":19},{"ruleId":"112","severity":1,"message":"116","line":58,"column":9,"nodeType":"114","messageId":"115","endLine":58,"endColumn":17},{"ruleId":"112","severity":1,"message":"117","line":23,"column":7,"nodeType":"114","messageId":"115","endLine":23,"endColumn":15},{"ruleId":"118","severity":1,"message":"119","line":10,"column":6,"nodeType":"120","endLine":10,"endColumn":8,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'routeMatch' is assigned a value but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","'_RSS_SRC' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggle'. Either include it or remove the dependency array.","ArrayExpression",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [toggle]",{"range":"127","text":"128"},[230,232],"[toggle]"]