[{"D:\\workspace\\project-personal\\fread\\src\\index.tsx":"1","D:\\workspace\\project-personal\\fread\\src\\App.tsx":"2","D:\\workspace\\project-personal\\fread\\src\\context\\viewType.ts":"3","D:\\workspace\\project-personal\\fread\\src\\page\\oauth\\index.ts":"4","D:\\workspace\\project-personal\\fread\\src\\component\\bookFilp\\index.tsx":"5","D:\\workspace\\project-personal\\fread\\src\\page\\home\\index.tsx":"6","D:\\workspace\\project-personal\\fread\\src\\utils\\useSearchParma.tsx":"7","D:\\workspace\\project-personal\\fread\\src\\page\\home\\sideBar.tsx":"8","D:\\workspace\\project-personal\\fread\\src\\page\\feed\\index.tsx":"9","D:\\workspace\\project-personal\\fread\\src\\page\\home\\sideBarItem.tsx":"10","D:\\workspace\\project-personal\\fread\\src\\page\\feed\\container.tsx":"11","D:\\workspace\\project-personal\\fread\\src\\context\\article.ts":"12","D:\\workspace\\project-personal\\fread\\src\\context\\feed.ts":"13","D:\\workspace\\project-personal\\fread\\src\\page\\feed\\utils.ts":"14","D:\\workspace\\project-personal\\fread\\src\\page\\feed\\reducer.ts":"15","D:\\workspace\\project-personal\\fread\\src\\page\\feed\\component.tsx":"16","D:\\workspace\\project-personal\\fread\\src\\mock\\feed.ts":"17","D:\\workspace\\project-personal\\fread\\src\\component\\articlePane\\index.tsx":"18","D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\index.tsx":"19","D:\\workspace\\project-personal\\fread\\src\\component\\overviewPane\\index.tsx":"20","D:\\workspace\\project-personal\\fread\\src\\component\\overviewPane\\overviewCell.tsx":"21","D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\container.tsx":"22","D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\component.tsx":"23","D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\feedItem.tsx":"24","D:\\workspace\\project-personal\\fread\\src\\page\\setting\\index.tsx":"25","D:\\workspace\\project-personal\\fread\\src\\utils\\useInoreaderToken.tsx":"26","D:\\workspace\\project-personal\\fread\\src\\api\\index.ts":"27","D:\\workspace\\project-personal\\fread\\src\\api\\auth.ts":"28","D:\\workspace\\project-personal\\fread\\src\\api\\inoreader.ts":"29"},{"size":463,"mtime":1612252247969,"results":"30","hashOfConfig":"31"},{"size":1814,"mtime":1620902850634,"results":"32","hashOfConfig":"31"},{"size":182,"mtime":1612252247969,"results":"33","hashOfConfig":"31"},{"size":519,"mtime":1620882135556,"results":"34","hashOfConfig":"31"},{"size":805,"mtime":1612252247969,"results":"35","hashOfConfig":"31"},{"size":1194,"mtime":1620705465891,"results":"36","hashOfConfig":"31"},{"size":1027,"mtime":1612252247985,"results":"37","hashOfConfig":"31"},{"size":5792,"mtime":1620891869826,"results":"38","hashOfConfig":"31"},{"size":63,"mtime":1612252247969,"results":"39","hashOfConfig":"31"},{"size":1356,"mtime":1613701011929,"results":"40","hashOfConfig":"31"},{"size":3331,"mtime":1613701011929,"results":"41","hashOfConfig":"31"},{"size":93,"mtime":1612252247969,"results":"42","hashOfConfig":"31"},{"size":90,"mtime":1612252247969,"results":"43","hashOfConfig":"31"},{"size":734,"mtime":1613701011929,"results":"44","hashOfConfig":"31"},{"size":2827,"mtime":1612252247969,"results":"45","hashOfConfig":"31"},{"size":3456,"mtime":1612263757116,"results":"46","hashOfConfig":"31"},{"size":862,"mtime":1612255449421,"results":"47","hashOfConfig":"31"},{"size":1688,"mtime":1612252247969,"results":"48","hashOfConfig":"31"},{"size":63,"mtime":1612252247969,"results":"49","hashOfConfig":"31"},{"size":5097,"mtime":1612252247969,"results":"50","hashOfConfig":"31"},{"size":775,"mtime":1612252247969,"results":"51","hashOfConfig":"31"},{"size":2344,"mtime":1612252247969,"results":"52","hashOfConfig":"31"},{"size":4557,"mtime":1612252247969,"results":"53","hashOfConfig":"31"},{"size":10541,"mtime":1613701011928,"results":"54","hashOfConfig":"31"},{"size":2140,"mtime":1620902600163,"results":"55","hashOfConfig":"31"},{"size":686,"mtime":1620876829193,"results":"56","hashOfConfig":"31"},{"size":1088,"mtime":1620902688543,"results":"57","hashOfConfig":"31"},{"size":270,"mtime":1620882025538,"results":"58","hashOfConfig":"31"},{"size":3150,"mtime":1620902535375,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"na5k5m",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\workspace\\project-personal\\fread\\src\\index.tsx",[],["124","125"],"D:\\workspace\\project-personal\\fread\\src\\App.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\context\\viewType.ts",[],"D:\\workspace\\project-personal\\fread\\src\\page\\oauth\\index.ts",[],"D:\\workspace\\project-personal\\fread\\src\\component\\bookFilp\\index.tsx",["126"],"import React, { useEffect } from \"react\";\r\nimport { useInterval, useToggle } from \"react-use\";\r\nimport \"./style.css\";\r\n\r\nconst BookFilp = () => {\r\n  const [isFilpEnd, toggle] = useToggle(false);\r\n\r\n  useEffect(() => {\r\n    toggle();\r\n  }, []);\r\n\r\n  useInterval(() => {\r\n    toggle();\r\n  }, 167 * 7);\r\n\r\n  return (\r\n    <div className={`book ${isFilpEnd ? \"filp-end\" : \"\"}`}>\r\n      <div className=\"back bg-gray-500\"></div>\r\n      <div className=\"book-page page6\"></div>\r\n      <div className=\"book-page page5\"></div>\r\n      <div className=\"book-page page4\"></div>\r\n      <div className=\"book-page page3\"></div>\r\n      <div className=\"book-page page2\"></div>\r\n      <div className=\"book-page page1\"></div>\r\n      <div className=\"front bg-gray-500\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookFilp;\r\n","D:\\workspace\\project-personal\\fread\\src\\page\\home\\index.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\utils\\useSearchParma.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\page\\home\\sideBar.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\page\\feed\\index.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\page\\home\\sideBarItem.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\page\\feed\\container.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\context\\article.ts",[],"D:\\workspace\\project-personal\\fread\\src\\context\\feed.ts",[],"D:\\workspace\\project-personal\\fread\\src\\page\\feed\\utils.ts",["127"],"import { useEffect, useState } from \"react\";\r\nimport Parser from \"rss-parser\";\r\n\r\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\r\nconst _RSS_SRC = \"https://rsshub.app/readhub/category/daily\";\r\nconst RSS_SRC = \"http://feeds.feedburner.com/ruanyifeng\";\r\n\r\nconst parser: Parser<any, any> = new Parser();\r\n\r\nexport const useFeedsData = () => {\r\n  const [feedsData, setFeedsData] = useState([{ content: \"\", title: \"\" }]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const feed = await parser.parseURL(CORS_PROXY + RSS_SRC);\r\n        setFeedsData(feed.items);\r\n        console.log(feed.items);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return feedsData;\r\n};\r\n","D:\\workspace\\project-personal\\fread\\src\\page\\feed\\reducer.ts",[],"D:\\workspace\\project-personal\\fread\\src\\page\\feed\\component.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\mock\\feed.ts",[],"D:\\workspace\\project-personal\\fread\\src\\component\\articlePane\\index.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\index.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\component\\overviewPane\\index.tsx",["128","129"],"import React from \"react\";\r\nimport {\r\n  GroupedList,\r\n  IGroupRenderProps,\r\n  IGroupHeaderProps,\r\n  CommandBarButton,\r\n  IIconProps,\r\n  FontIcon,\r\n  SelectionMode,\r\n  IContextualMenuProps,\r\n} from \"office-ui-fabric-react\";\r\nimport { createGroups } from \"@fluentui/example-data\";\r\nimport OverviewCell from \"./overviewCell\";\r\nimport \"./style.css\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\n\r\nexport interface Props {\r\n  className?: string;\r\n}\r\n\r\nconst groupCount = 5;\r\nconst groupDepth = 1;\r\nconst createItems = (count: number): any[] => {\r\n  return Array.from({\r\n    length: count,\r\n  }).map((item: any, index: number): any => ({\r\n    key: index,\r\n    unreadCount: 2,\r\n    title: `this is rss source: ${index}`,\r\n  }));\r\n};\r\n\r\nconst items: any[] = createItems(Math.pow(groupCount, groupDepth + 1));\r\nconst groups = createGroups(groupCount, groupDepth, 0, groupCount);\r\nconst listItemClassName =\r\n  \"cursor-pointer items-center h-10 text-base flex hover:bg-gray-50 select-none\";\r\n\r\nconst moreIcon: IIconProps = { iconName: \"More\" };\r\n\r\nconst menuProps: IContextualMenuProps = {\r\n  items: [\r\n    {\r\n      key: \"emailMessage\",\r\n      text: \"rename\",\r\n      iconProps: { iconName: \"Edit\" },\r\n    },\r\n    {\r\n      key: \"calendarEvent\",\r\n      text: \"Calendar event\",\r\n      iconProps: { iconName: \"Calendar\" },\r\n    },\r\n  ],\r\n};\r\n\r\nconst OverviewPane = ({ className }: Props) => {\r\n  const history = useHistory();\r\n  const routeMatch = useRouteMatch();\r\n  const location = useLocation();\r\n  const commonPx = \"px-2\";\r\n\r\n  const onRenderCell = (\r\n    nestingDepth?: number,\r\n    item?: any,\r\n    itemIndex?: number\r\n  ): React.ReactNode => {\r\n    const onClick = () => history.push(`/feed?type=source&sourceId=${item.key}`);\r\n    return item && typeof itemIndex === \"number\" && itemIndex > -1 ? (\r\n      <div\r\n        className={`${listItemClassName} hover:bg-gray-200 rounded-sm`}\r\n        style={{ paddingLeft: `${2 * (nestingDepth || 1)}rem` }}\r\n        onClick={onClick}\r\n      >\r\n        <FontIcon className=\"mr-2\" iconName=\"Dictionary\" />\r\n        {item.title}\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  const groupProps: IGroupRenderProps = {\r\n    onRenderHeader: (props?: IGroupHeaderProps): JSX.Element | null => {\r\n      if (props && props.group) {\r\n        const toggleCollapse = (): void => {\r\n          props.onToggleCollapse!(props.group!);\r\n        };\r\n\r\n        let unreadCount: number = 0;\r\n        const children = items.slice(\r\n          props.group.startIndex,\r\n          props.group.startIndex + props.group.count\r\n        );\r\n        children.forEach((item) => {\r\n          unreadCount += item.unreadCount;\r\n        });\r\n\r\n        return (\r\n          <div className={`${listItemClassName} ${commonPx} hover:bg-gray-200 rounded-sm`}>\r\n            <FontIcon\r\n              className={`mr-2 transition-all transform ${\r\n                props.group!.isCollapsed ? \"\" : \"rotate-90\"\r\n              }`}\r\n              iconName=\"ChevronRight\"\r\n              onClick={toggleCollapse}\r\n            />\r\n            <span className=\"flex-1\" onClick={toggleCollapse}>\r\n              {props.group!.name} ({unreadCount})\r\n            </span>\r\n            <CommandBarButton\r\n              className=\"bg-transparent hover:bg-transparent focus:bg-transparent focus:outline-none min-w-0\"\r\n              menuProps={menuProps}\r\n              iconProps={moreIcon}\r\n              onRenderMenuIcon={() => null}\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={`${className} flex-1 flex flex-col min-h-0 cursor-pointer`}>\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"PreviewLink\" }}\r\n        content=\"all\"\r\n        onClick={()=>history.push('/feed')}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"FavoriteStar\" }}\r\n        content=\"star\"\r\n        onClick={()=>history.push('/feed?type=star')}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"Archive\" }}\r\n        content=\"archive\"\r\n        onClick={()=>history.push('/feed?type=archive')}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx} bg-gray-50 rounded-t-lg rounded-b-none sm:bg-transparent sm:rounded-b-sm sm:rounded-t-sm`}\r\n        iconProps={{ iconName: \"Source\" }}\r\n        content=\"source\"\r\n        onFooterRender={() => (\r\n          <CommandBarButton\r\n            className=\"bg-transparent hover:bg-transparent focus:bg-transparent focus:outline-none min-w-0\"\r\n            menuProps={menuProps}\r\n            iconProps={moreIcon}\r\n            onRenderMenuIcon={() => null}\r\n          />\r\n        )}\r\n      />\r\n      <GroupedList\r\n        className=\"flex-1 border-b border-t overflow-y-auto scrollbar-none bg-gray-50 sm:bg-transparent\"\r\n        items={items}\r\n        onRenderCell={onRenderCell}\r\n        groupProps={groupProps}\r\n        selectionMode={SelectionMode.none}\r\n        groups={groups}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewPane;\r\n","D:\\workspace\\project-personal\\fread\\src\\component\\overviewPane\\overviewCell.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\container.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\component.tsx",["130"],"import { default as React, Dispatch } from \"react\";\r\nimport {\r\n  ActionButton,\r\n  GroupedList,\r\n  IGroup,\r\n  IGroupRenderProps,\r\n  IGroupHeaderProps,\r\n} from \"office-ui-fabric-react\";\r\nimport { FeedGroup, FeedProps } from \"./types\";\r\nimport \"./style.css\";\r\nimport FeedItem from \"./feedItem\";\r\nexport interface Props {\r\n  className?: string;\r\n  onClickFeed?(e: FeedProps): void;\r\n  items: FeedProps[];\r\n  groups: IGroup[];\r\n  isSidePaneOpen: boolean;\r\n  dispatch: Dispatch<any>;\r\n}\r\n\r\nconst mapStoreToProps = (store): any => {\r\n  const { byId: groupsById, allId: groupsAllId } = store.groups;\r\n  const { byId: feedsById } = store.feeds;\r\n  const groupsEntities = groupsAllId.map((id: string) => groupsById[id]);\r\n  const [groups, feeds] = groupsEntities.reduce(\r\n    (\r\n      previousValue: [IGroup[], FeedProps[]],\r\n      currentValue: FeedGroup,\r\n      currentIndex: number\r\n    ): [IGroup[], FeedProps[]] => {\r\n      return [\r\n        reduceGroups(previousValue[0], currentValue, previousValue[1].length),\r\n        reduceFeeds(previousValue[1], currentValue.children, currentIndex),\r\n      ];\r\n    },\r\n    [[], []]\r\n  );\r\n  return { feeds, groups };\r\n\r\n  function reduceGroups(\r\n    previousValue: IGroup[],\r\n    currentValue: FeedGroup,\r\n    feedsLenght: number\r\n  ): IGroup[] {\r\n    const group = {\r\n      key: currentValue.id,\r\n      name: currentValue.name,\r\n      level: 0,\r\n      isCollapsed: false,\r\n      children: [],\r\n      count: currentValue.children.length,\r\n      startIndex: feedsLenght,\r\n    };\r\n    previousValue.push(group);\r\n    return previousValue;\r\n  }\r\n\r\n  function reduceFeeds(\r\n    previousValue: FeedProps[],\r\n    currentValue: string[],\r\n    currentIndex: number\r\n  ): FeedProps[] {\r\n    return previousValue.concat(\r\n      currentValue.map(\r\n        (feedId: string): FeedProps => {\r\n          const feedEntity = feedsById[feedId];\r\n          return {\r\n            ...feedEntity,\r\n            key: feedEntity.id,\r\n            currentIndex,\r\n          };\r\n        }\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\nconst FeedsPane = ({\r\n  className,\r\n  items,\r\n  groups,\r\n  onClickFeed,\r\n  dispatch\r\n}: Props) => {\r\n  const onRenderHeader = (props?: IGroupHeaderProps): JSX.Element | null => {\r\n    if (props && props.group) {\r\n      return (\r\n        <div\r\n          className=\"\r\n           flex items-center \r\n           h-10 px-4 border-b\r\n           cursor-pointer \r\n           text-lg text-gray-600 font-bold leading-loose\r\n         \"\r\n        >\r\n          <div className=\"flex-1\">{props.group!.name}</div>\r\n          <span className=\"font-normal\">{props.group.count}</span>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const onRenderFooter = (): React.ReactElement | null => {\r\n    return (\r\n      <div className=\"flex justify-end px-4 pt-4 pb-6 border-t\">\r\n        <ActionButton className=\"text-blue-500 text-base mr-0 px-0\">\r\n          mark this group as read\r\n        </ActionButton>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const groupProps: IGroupRenderProps = {\r\n    onRenderHeader: onRenderHeader,\r\n    onRenderFooter: onRenderFooter,\r\n  };\r\n\r\n  const onRenderCell = (\r\n    nestingDepth?: number | undefined,\r\n    item?: any,\r\n    index?: number | undefined\r\n  ): React.ReactNode => {\r\n    \r\n    const toggleIsReadById = (e: any): void => {\r\n      if(e && typeof e.stopPropagation === 'function'){\r\n        e.stopPropagation();\r\n      } \r\n      dispatch({ type: \"feed/ById/toggleIsRead\", payload: item.key });\r\n    };\r\n\r\n    const toggleIsStarById = (e: any): void => {\r\n      if(e && typeof e.stopPropagation === 'function'){\r\n        e.stopPropagation();\r\n      } \r\n      dispatch({ type: \"feed/ById/toggleIsStar\", payload: item.key });\r\n    };\r\n\r\n    const toggleIsPinById = (e: any): void => {\r\n      if(e && typeof e.stopPropagation === 'function'){\r\n        e.stopPropagation();\r\n      } \r\n      dispatch({ type: \"feed/ById/toggleIsPin\", payload: item.key });\r\n    };\r\n\r\n    return (\r\n      <FeedItem\r\n        item={item}\r\n        itemIndex={index}\r\n        onClickFeed={onClickFeed}\r\n        onPinClick={toggleIsPinById}\r\n        onStarClick={toggleIsStarById}\r\n        onReadClick={toggleIsReadById}\r\n        onLeftSlide={toggleIsReadById}\r\n        onRightSlide={toggleIsStarById}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GroupedList\r\n        className={`${className}`}\r\n        items={items}\r\n        onRenderCell={onRenderCell}\r\n        onShouldVirtualize={() => false}\r\n        groupProps={groupProps}\r\n        groups={groups}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedsPane;\r\n","D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\feedItem.tsx",["131","132","133","134"],"import {\r\n  Text,\r\n  IImageProps,\r\n  ImageFit,\r\n  TooltipHost,\r\n  IconButton,\r\n  IIconProps,\r\n  IContextualMenuProps,\r\n  Image,\r\n} from \"@fluentui/react\";\r\nimport React, {\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n  useCallback,\r\n  useContext,\r\n} from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { FeedProps } from \"./types\";\r\nimport Hammer, { DIRECTION_LEFT, DIRECTION_RIGHT } from \"hammerjs\";\r\nimport ArticlePane from \"./../articlePane/index\";\r\nimport { useUpdateEffect } from \"react-use\";\r\nimport { ViewType, ViewTypeContext } from \"../../context/viewType\";\r\nimport { ArticleContext } from \"./../../context/article\";\r\n\r\nexport interface Props {\r\n  nestingDepth?: number;\r\n  item?: FeedProps;\r\n  itemIndex?: number;\r\n  onClickFeed?(e?: FeedProps): void;\r\n  onPinClick?(e?: any): void;\r\n  onStarClick?(e?: any): void;\r\n  onReadClick?(e?: any): void;\r\n  onLeftSlide?(e?: any): void;\r\n  onRightSlide?(e?: any): void;\r\n}\r\n\r\nconst moreIcon: IIconProps = { iconName: \"More\" };\r\nconst favoriteStarIcon: IIconProps = { iconName: \"FavoriteStar\" };\r\nconst favoriteStarFillIcon: IIconProps = { iconName: \"FavoriteStarFill\" };\r\nconst radioBtnOffIcon: IIconProps = { iconName: \"RadioBtnOff\" };\r\nconst radioBtnOnIcon: IIconProps = { iconName: \"RadioBtnOn\" };\r\n\r\nconst menuProps: IContextualMenuProps = {\r\n  items: [\r\n    {\r\n      key: \"emailMessage\",\r\n      text: \"Email message\",\r\n      iconProps: { iconName: \"Mail\" },\r\n    },\r\n    {\r\n      key: \"calendarEvent\",\r\n      text: \"Calendar event\",\r\n      iconProps: { iconName: \"Calendar\" },\r\n    },\r\n  ],\r\n  directionalHintFixed: true,\r\n};\r\n\r\nconst initXOffset = 0;\r\nconst thresholdMax = 160;\r\nconst thresholdMin = 10;\r\nconst slideBackAnimationDuration = 130;\r\n\r\nconst FeedItem = ({\r\n  nestingDepth,\r\n  item,\r\n  itemIndex,\r\n  onClickFeed,\r\n  onPinClick,\r\n  onStarClick,\r\n  onReadClick,\r\n  onLeftSlide = () => {},\r\n  onRightSlide = () => {},\r\n}: Props) => {\r\n  const [xOffset, setXOffset] = useState<number>(initXOffset);\r\n  const [slideBackAnimation, setSlideBackAnimation] = useState<boolean>(false);\r\n  const { viewType } = useContext(ViewTypeContext);\r\n  const article = useContext(ArticleContext);\r\n\r\n  const feedItemRef = useRef<any>(null);\r\n  const hammerInstanceRef = useRef<any>(null);\r\n\r\n  // 处理滑动事件\r\n  const handleOnPan = useCallback((ev: any) => {\r\n    if (\r\n      ev.offsetDirection === DIRECTION_LEFT ||\r\n      ev.offsetDirection === DIRECTION_RIGHT\r\n    ) {\r\n      const xOffsetAbs = Math.abs(ev.deltaX);\r\n      if (xOffsetAbs > thresholdMin && xOffsetAbs < thresholdMax) {\r\n        setXOffset(initXOffset + ev.deltaX);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleOnPanEnd = useCallback(\r\n    (ev: any) => {\r\n      if (ev.offsetDirection === DIRECTION_LEFT) {\r\n        if (onLeftSlide) {\r\n          onLeftSlide();\r\n        }\r\n      } else if (ev.offsetDirection === DIRECTION_RIGHT) {\r\n        if (onRightSlide) {\r\n          onRightSlide();\r\n        }\r\n      }\r\n\r\n      setSlideBackAnimation(true);\r\n      setXOffset(0);\r\n      setTimeout(\r\n        () => setSlideBackAnimation(false),\r\n        slideBackAnimationDuration\r\n      );\r\n    },\r\n    [onLeftSlide, onRightSlide]\r\n  );\r\n\r\n  // 订阅左右滑动的触摸事件\r\n  useEffect(() => {\r\n    const handleOnPan = (ev: any) => {\r\n      let translateXMatch = /translateX\\(-?(\\d*px)\\)/g.exec(\r\n        feedItemRef.current.style.transform\r\n      );\r\n\r\n      if (!translateXMatch) {\r\n        return null;\r\n      }\r\n\r\n      const translateX = parseFloat(translateXMatch[1]);\r\n      // console.log(translateX);\r\n      if (\r\n        ev.offsetDirection !== DIRECTION_LEFT &&\r\n        ev.offsetDirection !== DIRECTION_RIGHT\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      const xOffsetAbs = Math.abs(ev.deltaX);\r\n      const xOffsetSign = ev.deltaX < 0 ? \"-\" : \"\";\r\n\r\n      console.log(xOffsetAbs);\r\n\r\n      if (xOffsetAbs < thresholdMin || translateX > thresholdMax) {\r\n        return null;\r\n      }\r\n\r\n      const next =\r\n        easeInCirc(xOffsetAbs / window.innerWidth) * window.innerWidth;\r\n      window.requestAnimationFrame(\r\n        () =>\r\n          (feedItemRef.current.style.transform = `translateX(${xOffsetSign}${next}px)`)\r\n      );\r\n    };\r\n\r\n    const handleOnPanEnd = (ev: any) => {\r\n      if (\r\n        ev.offsetDirection !== DIRECTION_LEFT &&\r\n        ev.offsetDirection !== DIRECTION_RIGHT\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      if (ev.offsetDirection === DIRECTION_LEFT) {\r\n        onLeftSlide();\r\n      } else if (ev.offsetDirection === DIRECTION_RIGHT) {\r\n        onRightSlide();\r\n      }\r\n\r\n      window.requestAnimationFrame(() => {\r\n        // feedItemRef.current.style.transition = `transform ${slideBackAnimationDuration}ms ease-out`;\r\n        feedItemRef.current.style.transform = `translateX(${0}px)`;\r\n      });\r\n      // feedItemRef.current.style.transform = `translateX(${0}px)`;\r\n      // setSlideBackAnimation(true);\r\n      // setTimeout(\r\n      //   () => setSlideBackAnimation(false),\r\n      //   slideBackAnimationDuration\r\n      // );\r\n    };\r\n\r\n    const feedItemNode = feedItemRef.current;\r\n\r\n    if (hammerInstanceRef && feedItemNode) {\r\n      hammerInstanceRef.current = new Hammer(feedItemNode);\r\n      hammerInstanceRef.current.on(\"pan\", handleOnPan);\r\n      hammerInstanceRef.current.on(\"panend\", handleOnPanEnd);\r\n    }\r\n\r\n    return () => {\r\n      if (hammerInstanceRef && feedItemRef && feedItemNode) {\r\n        hammerInstanceRef.current.off(\"pan\", handleOnPan);\r\n        hammerInstanceRef.current.off(\"panend\", handleOnPanEnd);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 实现拖动动画\r\n  useUpdateEffect(() => {\r\n    window.requestAnimationFrame =\r\n      requestAnimationFrame || window.requestAnimationFrame;\r\n    const setNextTranslateX = () => {\r\n      if (feedItemRef && feedItemRef.current) {\r\n        feedItemRef.current.style.transform = `translateX(${xOffset}px)`;\r\n      }\r\n    };\r\n\r\n    window.requestAnimationFrame(setNextTranslateX);\r\n    setNextTranslateX();\r\n  }, [xOffset]);\r\n\r\n  const imageProps: IImageProps = {\r\n    src: item?.thumbnailSrc,\r\n    maximizeFrame: true,\r\n    imageFit: ImageFit.cover,\r\n  };\r\n\r\n  if (!item || typeof itemIndex !== \"number\" || itemIndex < 0) {\r\n    return null;\r\n  }\r\n\r\n  const feedHeaderElem: React.ReactElement | null =\r\n    viewType === 1 ? null : (\r\n      <div\r\n        className={`flex-shrink-0 h-24 w-24  mr-4 mb-0 ${\r\n          item.isRead ? \"opacity-40\" : \"\"\r\n        }`}\r\n      >\r\n        <Image className=\"mr-3 rounded-md select-none\" {...imageProps} />\r\n      </div>\r\n    );\r\n\r\n  const feedBodyElem: React.ReactElement | null = (\r\n    <div\r\n      className={classnames(\"flex flex-1\", {\r\n        \"opacity-40\": item.isRead,\r\n        \"flex-col\": viewType !== ViewType.list,\r\n        \"items-center\": viewType === ViewType.list,\r\n      })}\r\n    >\r\n      <div\r\n        className={classnames(\r\n          \"relative flex items-start text-lg text-gray-800 font-medium\",\r\n          {\r\n            \"text-base\": viewType === ViewType.list,\r\n            \"mr-2\": viewType === ViewType.list,\r\n            \"mb-2\": viewType !== ViewType.list,\r\n          }\r\n        )}\r\n      >\r\n        {item.title}\r\n      </div>\r\n      <div\r\n        className={classnames(\"flex-1 text-base text-gray-600 w-full\", {\r\n          truncate: viewType === ViewType.list,\r\n        })}\r\n      >\r\n        {item.summary}\r\n      </div>\r\n      <div className=\"flex items-center\">\r\n        <TooltipHost content={item.sourceName} closeDelay={500}>\r\n          <Text\r\n            className=\"\r\n                  text-sm text-gray-400 max-w-xs\r\n                  md:max-w-5xs\r\n                  lg:max-w-xs\r\n                  xl:max-w-5xs\r\n                \"\r\n            block\r\n            nowrap\r\n          >\r\n            {item.sourceName}\r\n          </Text>\r\n        </TooltipHost>\r\n        <Text className=\"text-sm text-gray-400\" nowrap>\r\n          /{item.time}\r\n        </Text>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const feedFooterElem: React.ReactElement = (\r\n    <div\r\n      className={classnames(\r\n        \"hidden items-center justify-end\",\r\n        \"sm:justify-between sm:flex\",\r\n        \"md:justify-end\",\r\n        \"xl:justify-between\",\r\n        {\r\n          \"flex-col\": viewType !== ViewType.list,\r\n        }\r\n      )}\r\n    >\r\n      <IconButton\r\n        className=\"focus:outline-none\"\r\n        iconProps={item.isRead ? radioBtnOnIcon : radioBtnOffIcon}\r\n        title=\"mark as read\"\r\n        ariaLabel=\"Mark as read\"\r\n        disabled={false}\r\n        onClick={onReadClick}\r\n      />\r\n      <IconButton\r\n        className=\"focus:outline-none\"\r\n        iconProps={item.isStar ? favoriteStarFillIcon : favoriteStarIcon}\r\n        title=\"favorite\"\r\n        ariaLabel=\"Favorite\"\r\n        disabled={false}\r\n        onClick={onStarClick}\r\n      />\r\n      <IconButton\r\n        className=\"focus:outline-none\"\r\n        menuProps={menuProps}\r\n        iconProps={moreIcon}\r\n        onRenderMenuIcon={() => null}\r\n        title=\"more\"\r\n        ariaLabel=\"More\"\r\n        disabled={false}\r\n        checked={false}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const slideBtnsElem = (\r\n    <>\r\n      <div\r\n        className=\"h-full flex items-center justify-center bg-red-400 absolute left-0 top-0\"\r\n        style={{ width: thresholdMax }}\r\n      >\r\n        <span className=\"text-2xl text-white\">star</span>\r\n      </div>\r\n      <div\r\n        className=\"h-full flex items-center justify-center bg-blue-400 absolute right-0 top-0\"\r\n        style={{ width: thresholdMax }}\r\n      >\r\n        <span className=\"text-2xl text-white\">read</span>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"overflow-x-hidden relative\">\r\n      {slideBtnsElem}\r\n      <div\r\n        ref={feedItemRef}\r\n        onClick={onClickFeed?.bind(null, item)}\r\n        style={{\r\n          transition: `transform ${slideBackAnimationDuration}ms ease-out`,\r\n        }}\r\n        className={classnames(\r\n          \"feed-item flex relative z-10 p-4 group bg-white cursor-pointer select-none flex-wrap\",\r\n          \"md:flex-nowrap hover:bg-gray-50\",\r\n          {\r\n            \"border-b\": viewType === ViewType.list,\r\n            \"py-2\": viewType === ViewType.list,\r\n          }\r\n        )}\r\n      >\r\n        {feedHeaderElem}\r\n        {feedBodyElem}\r\n        {feedFooterElem}\r\n      </div>\r\n      {item.isInnerArticleShow ? (\r\n        <ArticlePane\r\n          className=\"bg-white relative z-10 border-b\"\r\n          article={article}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedItem;\r\n\r\nfunction easeInCirc(x: number): number {\r\n  return 1 - Math.sqrt(1 - Math.pow(x, 2));\r\n}\r\n","D:\\workspace\\project-personal\\fread\\src\\page\\setting\\index.tsx",["135","136"],"D:\\workspace\\project-personal\\fread\\src\\utils\\useInoreaderToken.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\api\\index.ts",[],"D:\\workspace\\project-personal\\fread\\src\\api\\auth.ts",[],"D:\\workspace\\project-personal\\fread\\src\\api\\inoreader.ts",["137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":10,"column":6,"nodeType":"144","endLine":10,"endColumn":8,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":5,"column":7,"nodeType":"148","messageId":"149","endLine":5,"endColumn":15},{"ruleId":"146","severity":1,"message":"150","line":57,"column":9,"nodeType":"148","messageId":"149","endLine":57,"endColumn":19},{"ruleId":"146","severity":1,"message":"151","line":58,"column":9,"nodeType":"148","messageId":"149","endLine":58,"endColumn":17},{"ruleId":"146","severity":1,"message":"152","line":21,"column":7,"nodeType":"148","messageId":"149","endLine":21,"endColumn":22},{"ruleId":"146","severity":1,"message":"153","line":77,"column":10,"nodeType":"148","messageId":"149","endLine":77,"endColumn":28},{"ruleId":"146","severity":1,"message":"154","line":85,"column":9,"nodeType":"148","messageId":"149","endLine":85,"endColumn":20},{"ruleId":"146","severity":1,"message":"155","line":97,"column":9,"nodeType":"148","messageId":"149","endLine":97,"endColumn":23},{"ruleId":"142","severity":1,"message":"156","line":196,"column":6,"nodeType":"144","endLine":196,"endColumn":8,"suggestions":"157"},{"ruleId":"146","severity":1,"message":"158","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":19},{"ruleId":"146","severity":1,"message":"159","line":7,"column":9,"nodeType":"148","messageId":"149","endLine":7,"endColumn":24},{"ruleId":"146","severity":1,"message":"160","line":5,"column":7,"nodeType":"148","messageId":"149","endLine":5,"endColumn":22},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggle'. Either include it or remove the dependency array.","ArrayExpression",["163"],"@typescript-eslint/no-unused-vars","'_RSS_SRC' is assigned a value but never used.","Identifier","unusedVar","'routeMatch' is assigned a value but never used.","'location' is assigned a value but never used.","'mapStoreToProps' is assigned a value but never used.","'slideBackAnimation' is assigned a value but never used.","'handleOnPan' is assigned a value but never used.","'handleOnPanEnd' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onLeftSlide' and 'onRightSlide'. Either include them or remove the dependency array. If 'onLeftSlide' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["164"],"'TextField' is defined but never used.","'getErrorMessage' is assigned a value but never used.","'SystemStreamIDs' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [toggle]",{"range":"169","text":"170"},"Update the dependencies array to be: [onLeftSlide, onRightSlide]",{"range":"171","text":"172"},[239,241],"[toggle]",[5496,5498],"[onLeftSlide, onRightSlide]"]