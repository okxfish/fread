[{"D:\\workspace\\fread\\src\\index.tsx":"1","D:\\workspace\\fread\\src\\reportWebVitals.ts":"2","D:\\workspace\\fread\\src\\App.tsx":"3","D:\\workspace\\fread\\src\\page\\home\\index.tsx":"4","D:\\workspace\\fread\\src\\component\\overviewPane\\index.tsx":"5","D:\\workspace\\fread\\src\\component\\feedsPane\\index.tsx":"6","D:\\workspace\\fread\\src\\component\\articlePane\\index.tsx":"7","D:\\workspace\\fread\\src\\component\\feedsPane\\container.tsx":"8","D:\\workspace\\fread\\src\\component\\feedsPane\\component.tsx":"9","D:\\workspace\\fread\\src\\mock\\feed.ts":"10","D:\\workspace\\fread\\src\\page\\feed\\index.tsx":"11","D:\\workspace\\fread\\src\\component\\overviewPane\\overviewCell.tsx":"12","D:\\workspace\\fread\\src\\page\\home\\sideBarItem.tsx":"13","D:\\workspace\\fread\\src\\utils\\useSearchParma.tsx":"14","D:\\workspace\\fread\\src\\component\\animationPane\\index.tsx":"15","D:\\workspace\\fread\\src\\component\\feedsPane\\feedItem.tsx":"16"},{"size":1072,"mtime":1611408815687,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1608559821129,"results":"19","hashOfConfig":"18"},{"size":975,"mtime":1611409951785,"results":"20","hashOfConfig":"18"},{"size":5130,"mtime":1611995542729,"results":"21","hashOfConfig":"18"},{"size":5088,"mtime":1611989828543,"results":"22","hashOfConfig":"18"},{"size":77,"mtime":1608978858773,"results":"23","hashOfConfig":"18"},{"size":1688,"mtime":1611981587103,"results":"24","hashOfConfig":"18"},{"size":4443,"mtime":1610460934186,"results":"25","hashOfConfig":"18"},{"size":3001,"mtime":1611937791832,"results":"26","hashOfConfig":"18"},{"size":862,"mtime":1611147228769,"results":"27","hashOfConfig":"18"},{"size":4912,"mtime":1611990057294,"results":"28","hashOfConfig":"18"},{"size":746,"mtime":1611989666162,"results":"29","hashOfConfig":"18"},{"size":1337,"mtime":1610460934191,"results":"30","hashOfConfig":"18"},{"size":1027,"mtime":1610625825207,"results":"31","hashOfConfig":"18"},{"size":1884,"mtime":1611988011078,"results":"32","hashOfConfig":"18"},{"size":9663,"mtime":1611980917872,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"b5texx",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"45"},"D:\\workspace\\fread\\src\\index.tsx",["70"],"D:\\workspace\\fread\\src\\reportWebVitals.ts",[],"D:\\workspace\\fread\\src\\App.tsx",[],"D:\\workspace\\fread\\src\\page\\home\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\overviewPane\\index.tsx",["71","72"],"import React from \"react\";\r\nimport {\r\n  GroupedList,\r\n  IGroupRenderProps,\r\n  IGroupHeaderProps,\r\n  CommandBarButton,\r\n  IIconProps,\r\n  FontIcon,\r\n  SelectionMode,\r\n  IContextualMenuProps,\r\n} from \"office-ui-fabric-react\";\r\nimport { createGroups } from \"@fluentui/example-data\";\r\nimport OverviewCell from \"./overviewCell\";\r\nimport \"./style.css\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\n\r\nexport interface Props {\r\n  className?: string;\r\n}\r\n\r\nconst groupCount = 5;\r\nconst groupDepth = 1;\r\nconst createItems = (count: number): any[] => {\r\n  return Array.from({\r\n    length: count,\r\n  }).map((item: any, index: number): any => ({\r\n    key: index,\r\n    unreadCount: 2,\r\n    title: `this is rss source: ${index}`,\r\n  }));\r\n};\r\n\r\nconst items: any[] = createItems(Math.pow(groupCount, groupDepth + 1));\r\nconst groups = createGroups(groupCount, groupDepth, 0, groupCount);\r\nconst listItemClassName =\r\n  \"cursor-pointer items-center h-10 text-base flex hover:bg-gray-50 select-none\";\r\n\r\nconst moreIcon: IIconProps = { iconName: \"More\" };\r\n\r\nconst menuProps: IContextualMenuProps = {\r\n  items: [\r\n    {\r\n      key: \"emailMessage\",\r\n      text: \"rename\",\r\n      iconProps: { iconName: \"Edit\" },\r\n    },\r\n    {\r\n      key: \"calendarEvent\",\r\n      text: \"Calendar event\",\r\n      iconProps: { iconName: \"Calendar\" },\r\n    },\r\n  ],\r\n};\r\n\r\nconst OverviewPane = ({ className }: Props) => {\r\n  const history = useHistory();\r\n  const routeMatch = useRouteMatch();\r\n  const location = useLocation();\r\n  const commonPx = \"px-2\";\r\n\r\n  const onRenderCell = (\r\n    nestingDepth?: number,\r\n    item?: any,\r\n    itemIndex?: number\r\n  ): React.ReactNode => {\r\n    const onClick = () => history.push(`/feed/source?sourceName=${item.title}`);\r\n    return item && typeof itemIndex === \"number\" && itemIndex > -1 ? (\r\n      <div\r\n        className={`${listItemClassName} hover:bg-gray-200 rounded-sm`}\r\n        style={{ paddingLeft: `${2 * (nestingDepth || 1)}rem` }}\r\n        onClick={onClick}\r\n      >\r\n        <FontIcon className=\"mr-2\" iconName=\"Dictionary\" />\r\n        {item.title}\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  const groupProps: IGroupRenderProps = {\r\n    onRenderHeader: (props?: IGroupHeaderProps): JSX.Element | null => {\r\n      if (props && props.group) {\r\n        const toggleCollapse = (): void => {\r\n          props.onToggleCollapse!(props.group!);\r\n        };\r\n\r\n        let unreadCount: number = 0;\r\n        const children = items.slice(\r\n          props.group.startIndex,\r\n          props.group.startIndex + props.group.count\r\n        );\r\n        children.forEach((item) => {\r\n          unreadCount += item.unreadCount;\r\n        });\r\n        return (\r\n          <div className={`${listItemClassName} ${commonPx} hover:bg-gray-200 rounded-sm`}>\r\n            <FontIcon\r\n              className={`mr-2 transition-all transform ${\r\n                props.group!.isCollapsed ? \"\" : \"rotate-90\"\r\n              }`}\r\n              iconName=\"ChevronRight\"\r\n              onClick={toggleCollapse}\r\n            />\r\n            <span className=\"flex-1\" onClick={toggleCollapse}>\r\n              {props.group!.name} ({unreadCount})\r\n            </span>\r\n            <CommandBarButton\r\n              className=\"bg-transparent hover:bg-transparent focus:bg-transparent focus:outline-none min-w-0\"\r\n              menuProps={menuProps}\r\n              iconProps={moreIcon}\r\n              onRenderMenuIcon={() => null}\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={`${className} flex-1 flex flex-col min-h-0 cursor-pointer`}>\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"PreviewLink\" }}\r\n        content=\"all\"\r\n        onClick={()=>history.push('/feed/all')}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"FavoriteStar\" }}\r\n        content=\"star\"\r\n        onClick={()=>history.push('/feed/star')}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"Archive\" }}\r\n        content=\"archive\"\r\n        onClick={()=>history.push('/feed/archive')}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx} bg-gray-50 rounded-t-lg rounded-b-none sm:bg-transparent sm:rounded-b-sm sm:rounded-t-sm`}\r\n        iconProps={{ iconName: \"Source\" }}\r\n        content=\"source\"\r\n        onFooterRender={() => (\r\n          <CommandBarButton\r\n            className=\"bg-transparent hover:bg-transparent focus:bg-transparent focus:outline-none min-w-0\"\r\n            menuProps={menuProps}\r\n            iconProps={moreIcon}\r\n            onRenderMenuIcon={() => null}\r\n          />\r\n        )}\r\n      />\r\n      <GroupedList\r\n        className=\"flex-1 border-b border-t overflow-y-auto scrollbar-none bg-gray-50 sm:bg-transparent\"\r\n        items={items}\r\n        onRenderCell={onRenderCell}\r\n        groupProps={groupProps}\r\n        selectionMode={SelectionMode.none}\r\n        groups={groups}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewPane;\r\n",["73","74"],"D:\\workspace\\fread\\src\\component\\feedsPane\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\articlePane\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\feedsPane\\container.tsx",[],"D:\\workspace\\fread\\src\\component\\feedsPane\\component.tsx",[],"D:\\workspace\\fread\\src\\mock\\feed.ts",[],"D:\\workspace\\fread\\src\\page\\feed\\index.tsx",["75"],"import React, { useEffect, useState, Suspense, lazy, useContext } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport Parser from \"rss-parser\";\r\n\r\nimport { useWindowSize } from \"react-use\";\r\nimport { useSearchParam } from \"../../utils/useSearchParma\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { Spinner, SpinnerSize } from \"office-ui-fabric-react\";\r\nimport { Modal, IconButton, IIconProps } from \"office-ui-fabric-react\";\r\nimport { ViewType, ViewTypeContext } from \"../../App\";\r\nimport ArticlePane from \"../../component/articlePane\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\nconst globalNavButtonIcon: IIconProps = { iconName: \"GlobalNavButton\" };\r\n\r\nconst parser: Parser<any, any> = new Parser();\r\n\r\nconst OverviewPane = lazy(() => import(\"../../component/overviewPane\"));\r\nconst FeedsPane = lazy(() => import(\"../../component/feedsPane\"));\r\nconst AnimationPane = lazy(() => import(\"../../component/animationPane\"));\r\n\r\nconst FeedPage = () => {\r\n  const [isArticleModalOpen, setIsArticleModalOpen] = useState<boolean>(false);\r\n  const [isOverViewPaneOpen, setIsOverViewPaneOpen] = useState<boolean>(false);\r\n  const [feedsData, setFeedsData] = useState([{ content: \"\", title: \"\" }]);\r\n  const { viewType, setViewType } = useContext(ViewTypeContext);\r\n  const hideModal = (): void => setIsArticleModalOpen(false);\r\n  const openModal = (): void => setIsArticleModalOpen(true);\r\n  const { width: windowSize } = useWindowSize();\r\n  const location = useLocation();\r\n\r\n  const openOverviewPane = () => setIsOverViewPaneOpen(true);\r\n  const closeOverviewPane = () => setIsOverViewPaneOpen(false);\r\n\r\n  const articleIndex = parseInt(\r\n    useSearchParam(\"articleIndex\", location) || \"0\",\r\n    10\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const feed = await parser.parseURL(\r\n          CORS_PROXY + \"http://feeds.feedburner.com/ruanyifeng\"\r\n        );\r\n        setFeedsData(feed.items);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const onClickFeed = (e: any): any => {\r\n    e.preventDefault();\r\n    if (windowSize < 1280) {\r\n      openModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Suspense\r\n        fallback={\r\n          <div className=\"h-full w-full flex items-center justify-center col-start-1 col-span-4\">\r\n            <Spinner\r\n              className=\"m-auto mt-72\"\r\n              size={SpinnerSize.large}\r\n              label=\"loading...\"\r\n            />\r\n          </div>\r\n        }\r\n      >\r\n        <div\r\n          className=\"\r\n            flex items-center justify-between z-30\r\n            row-start-1 row-span-1 col-start-1 col-span-4\r\n            border-b border-gray-200\r\n            sm:hidden\r\n          \"\r\n        >\r\n          <IconButton\r\n            className=\"text-gray-600 sm:text-gray-300\"\r\n            iconProps={globalNavButtonIcon}\r\n            onClick={openOverviewPane}\r\n          />\r\n        </div>\r\n        <AnimationPane\r\n          rootClassName=\"\r\n              row-start-1 row-span-3\r\n              col-start-1 col-span-4\r\n              sm:col-span-1 sm:col-start-2\r\n            \"\r\n          isOpend={isOverViewPaneOpen}\r\n          onClose={closeOverviewPane}\r\n          canMaskClose\r\n        >\r\n          <OverviewPane className=\"bg-white border-r rounded-t-2xl pt-6 px-2 sm:rounded-none sm:pt-0\" />\r\n        </AnimationPane>\r\n        <div\r\n          className={classnames(\r\n            \"overflow-auto scrollbar h-full\",\r\n            \"col-start-1 col-span-4 row-start-2 row-span-2\",\r\n            \"sm:col-start-3 sm:col-span-2 sm:row-start-1 sm:row-span-3\",\r\n            \"xl:col-start-3 xl:col-span-1\"\r\n            // { \"\": viewType !== ViewType.threeway }\r\n          )}\r\n          data-is-scrollable\r\n        >\r\n          <FeedsPane\r\n            className=\"h-full transition-all\"\r\n            onClickFeed={onClickFeed}\r\n          />\r\n        </div>\r\n        {viewType === ViewType.threeway ? (\r\n          <div\r\n            className=\"\r\n              h-full scrollbar overflow-y-auto \r\n              hidden col-start-4 col-span-1 row-start-1 row-span-3\r\n              xl:block xl:col-start-4 xl:col-span-1\r\n            \"\r\n          >\r\n            <ArticlePane className=\"px-6\" article={feedsData[articleIndex]} />\r\n          </div>\r\n        ) : null}\r\n        <Modal\r\n          className=\"\"\r\n          isOpen={isArticleModalOpen}\r\n          onDismiss={hideModal}\r\n          overlay={{ style: { backdropFilter: \"blur(42px)\" } }}\r\n          isBlocking={false}\r\n          styles={{ main: { maxHeight: \"100%\", maxWidth: \"100%\" } }}\r\n        >\r\n          <ArticlePane\r\n            className=\"article-modal px-6 h-screen w-screen\"\r\n            closeModal={() => setIsArticleModalOpen(false)}\r\n            article={feedsData[articleIndex]}\r\n          />\r\n        </Modal>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedPage;\r\n","D:\\workspace\\fread\\src\\component\\overviewPane\\overviewCell.tsx",[],"D:\\workspace\\fread\\src\\page\\home\\sideBarItem.tsx",[],"D:\\workspace\\fread\\src\\utils\\useSearchParma.tsx",[],"D:\\workspace\\fread\\src\\component\\animationPane\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\feedsPane\\feedItem.tsx",["76","77","78","79","80","81"],"import {\r\n  Text,\r\n  IImageProps,\r\n  ImageFit,\r\n  TooltipHost,\r\n  IconButton,\r\n  IIconProps,\r\n  IContextualMenuProps,\r\n  Image,\r\n} from \"@fluentui/react\";\r\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport { FeedProps } from \"./types\";\r\nimport Hammer, { DIRECTION_LEFT, DIRECTION_RIGHT } from \"hammerjs\";\r\nimport { useUpdateEffect } from \"react-use\";\r\nexport interface Props {\r\n  nestingDepth?: number;\r\n  item?: FeedProps;\r\n  itemIndex?: number;\r\n  onClickFeed?(e?: any): void;\r\n  onPinClick?(e?: any): void;\r\n  onStarClick?(e?: any): void;\r\n  onReadClick?(e?: any): void;\r\n  onLeftSlide?(e?: any): void;\r\n  onRightSlide?(e?: any): void;\r\n}\r\n\r\nconst moreIcon: IIconProps = { iconName: \"More\" };\r\nconst favoriteStarIcon: IIconProps = { iconName: \"FavoriteStar\" };\r\nconst favoriteStarFillIcon: IIconProps = { iconName: \"FavoriteStarFill\" };\r\nconst pinSolid12Icon: IIconProps = { iconName: \"PinSolid12\" };\r\nconst pinSolidOff12Icon: IIconProps = { iconName: \"PinSolidOff12\" };\r\nconst radioBtnOffIcon: IIconProps = { iconName: \"RadioBtnOff\" };\r\nconst radioBtnOnIcon: IIconProps = { iconName: \"RadioBtnOn\" };\r\n\r\nconst menuProps: IContextualMenuProps = {\r\n  items: [\r\n    {\r\n      key: \"emailMessage\",\r\n      text: \"Email message\",\r\n      iconProps: { iconName: \"Mail\" },\r\n    },\r\n    {\r\n      key: \"calendarEvent\",\r\n      text: \"Calendar event\",\r\n      iconProps: { iconName: \"Calendar\" },\r\n    },\r\n  ],\r\n  directionalHintFixed: true,\r\n};\r\n\r\nconst initXOffset = 0;\r\nconst thresholdMax = 160;\r\nconst thresholdMin = 10;\r\nconst slideBackAnimationDuration = 130;\r\n\r\nconst FeedItem = ({\r\n  nestingDepth,\r\n  item,\r\n  itemIndex,\r\n  onClickFeed,\r\n  onPinClick,\r\n  onStarClick,\r\n  onReadClick,\r\n  onLeftSlide = () => {},\r\n  onRightSlide = () => {},\r\n}: Props) => {\r\n  const [xOffset, setXOffset] = useState<number>(initXOffset);\r\n  const [slideBackAnimation, setSlideBackAnimation] = useState<boolean>(false);\r\n\r\n  const feedItemRef = useRef<any>(null);\r\n  const hammerInstanceRef = useRef<any>(null);\r\n\r\n  // 处理滑动事件\r\n  const handleOnPan = useCallback((ev: any) => {\r\n    if (\r\n      ev.offsetDirection === DIRECTION_LEFT ||\r\n      ev.offsetDirection === DIRECTION_RIGHT\r\n    ) {\r\n      const xOffsetAbs = Math.abs(ev.deltaX);\r\n      if (xOffsetAbs > thresholdMin && xOffsetAbs < thresholdMax) {\r\n        setXOffset(initXOffset + ev.deltaX);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleOnPanEnd = useCallback(\r\n    (ev: any) => {\r\n      if (ev.offsetDirection === DIRECTION_LEFT) {\r\n        if (onLeftSlide) {\r\n          onLeftSlide();\r\n        }\r\n      } else if (ev.offsetDirection === DIRECTION_RIGHT) {\r\n        if (onRightSlide) {\r\n          onRightSlide();\r\n        }\r\n      }\r\n\r\n      setSlideBackAnimation(true);\r\n      setXOffset(0);\r\n      setTimeout(\r\n        () => setSlideBackAnimation(false),\r\n        slideBackAnimationDuration\r\n      );\r\n    },\r\n    [onLeftSlide, onRightSlide]\r\n  );\r\n\r\n  // 订阅左右滑动的触摸事件\r\n  useEffect(() => {\r\n    const handleOnPan = (ev: any) => {\r\n      let translateXMatch = /translateX\\(-?(\\d*px)\\)/g.exec(\r\n        feedItemRef.current.style.transform\r\n      );\r\n\r\n      if (!translateXMatch) {\r\n        return null;\r\n      }\r\n\r\n      const translateX = parseFloat(translateXMatch[1]);\r\n      // console.log(translateX);\r\n      if (\r\n        ev.offsetDirection !== DIRECTION_LEFT &&\r\n        ev.offsetDirection !== DIRECTION_RIGHT\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      const xOffsetAbs = Math.abs(ev.deltaX);\r\n      const xOffsetSign = ev.deltaX < 0 ? \"-\" : \"\";\r\n\r\n      console.log(xOffsetAbs);\r\n\r\n      if (xOffsetAbs < thresholdMin || translateX > thresholdMax) {\r\n        return null;\r\n      }\r\n\r\n      const next =\r\n        easeInCirc(xOffsetAbs / window.innerWidth) * window.innerWidth;\r\n      // console.log(next);\r\n      window.requestAnimationFrame(\r\n        () =>\r\n          (feedItemRef.current.style.transform = `translateX(${xOffsetSign}${next}px)`)\r\n      );\r\n    };\r\n\r\n    const handleOnPanEnd = (ev: any) => {\r\n      if (\r\n        ev.offsetDirection !== DIRECTION_LEFT &&\r\n        ev.offsetDirection !== DIRECTION_RIGHT\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      if (ev.offsetDirection === DIRECTION_LEFT) {\r\n        onLeftSlide();\r\n      } else if (ev.offsetDirection === DIRECTION_RIGHT) {\r\n        onRightSlide();\r\n      }\r\n\r\n      window.requestAnimationFrame(() => {\r\n        // feedItemRef.current.style.transition = `transform ${slideBackAnimationDuration}ms ease-out`;\r\n        feedItemRef.current.style.transform = `translateX(${0}px)`;\r\n      });\r\n      // feedItemRef.current.style.transform = `translateX(${0}px)`;\r\n      // setSlideBackAnimation(true);\r\n      // setTimeout(\r\n      //   () => setSlideBackAnimation(false),\r\n      //   slideBackAnimationDuration\r\n      // );\r\n    };\r\n\r\n    const feedItemNode = feedItemRef.current;\r\n\r\n    if (hammerInstanceRef && feedItemNode) {\r\n      hammerInstanceRef.current = new Hammer(feedItemNode);\r\n      hammerInstanceRef.current.on(\"pan\", handleOnPan);\r\n      hammerInstanceRef.current.on(\"panend\", handleOnPanEnd);\r\n    }\r\n\r\n    return () => {\r\n      if (hammerInstanceRef && feedItemRef && feedItemNode) {\r\n        console.log(feedItemNode);\r\n        hammerInstanceRef.current.off(\"pan\", handleOnPan);\r\n        hammerInstanceRef.current.off(\"panend\", handleOnPanEnd);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 实现拖动动画\r\n  useUpdateEffect(() => {\r\n    window.requestAnimationFrame =\r\n      requestAnimationFrame || window.requestAnimationFrame;\r\n    const setNextTranslateX = () => {\r\n      if (feedItemRef && feedItemRef.current) {\r\n        feedItemRef.current.style.transform = `translateX(${xOffset}px)`;\r\n      }\r\n    };\r\n\r\n    window.requestAnimationFrame(setNextTranslateX);\r\n    setNextTranslateX();\r\n  }, [xOffset]);\r\n\r\n  const imageProps: IImageProps = {\r\n    src: item?.thumbnailSrc,\r\n    maximizeFrame: true,\r\n    imageFit: ImageFit.cover,\r\n  };\r\n\r\n  if (!item || typeof itemIndex !== \"number\" || itemIndex < 0) {\r\n    return null;\r\n  }\r\n\r\n  const feedFooterElem: React.ReactElement = (\r\n    <div\r\n      className=\"\r\n          hidden flex-col items-center justify-end \r\n          sm:justify-between sm:flex\r\n          md:justify-end\r\n          xl:justify-between\r\n      \"\r\n    >\r\n      <IconButton\r\n        className=\"focus:outline-none\"\r\n        iconProps={item.isRead ? radioBtnOnIcon : radioBtnOffIcon}\r\n        title=\"mark as read\"\r\n        ariaLabel=\"Mark as read\"\r\n        disabled={false}\r\n        onClick={onReadClick}\r\n      />\r\n      {/* <IconButton\r\n        className=\"focus:outline-none\"\r\n        iconProps={item.isPin ? pinSolid12Icon : pinSolidOff12Icon}\r\n        title=\"pin as unread\"\r\n        ariaLabel=\"Pin as unread\"\r\n        disabled={false}\r\n        onClick={onPinClick}\r\n      /> */}\r\n      <IconButton\r\n        className=\"focus:outline-none\"\r\n        iconProps={item.isStar ? favoriteStarFillIcon : favoriteStarIcon}\r\n        title=\"favorite\"\r\n        ariaLabel=\"Favorite\"\r\n        disabled={false}\r\n        onClick={onStarClick}\r\n      />\r\n      <IconButton\r\n        className=\"focus:outline-none\"\r\n        menuProps={menuProps}\r\n        iconProps={moreIcon}\r\n        onRenderMenuIcon={() => null}\r\n        title=\"more\"\r\n        ariaLabel=\"More\"\r\n        disabled={false}\r\n        checked={false}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"overflow-x-hidden relative\" onClick={onClickFeed}>\r\n      <div\r\n        className=\"h-full flex items-center justify-center bg-red-400 absolute left-0 top-0\"\r\n        style={{ width: thresholdMax }}\r\n      >\r\n        <span className=\"text-2xl text-white\">star</span>\r\n      </div>\r\n      <div\r\n        className=\"h-full flex items-center justify-center bg-blue-400 absolute right-0 top-0\"\r\n        style={{ width: thresholdMax }}\r\n      >\r\n        <span className=\"text-2xl text-white\">read</span>\r\n      </div>\r\n      <div\r\n        ref={feedItemRef}\r\n        style={{\r\n          transition: `transform ${slideBackAnimationDuration}ms ease-out`,\r\n        }}\r\n        className={`\r\n        feed-item flex relative z-10 p-4  group bg-white cursor-pointer select-none hover:bg-gray-50 \r\n        flex-wrap\r\n        md:flex-nowrap\r\n        `}\r\n      >\r\n        <div\r\n          className={`flex-shrink-0 w-28 h-28  mr-4 mb-0 ${\r\n            item.isRead ? \"opacity-40\" : \"\"\r\n          }`}\r\n        >\r\n          <Image className=\"mr-3 rounded-md select-none\" {...imageProps} />\r\n        </div>\r\n        <div\r\n          className={`flex flex-col flex-1 ${item.isRead ? \"opacity-40\" : \"\"}`}\r\n        >\r\n          <div className=\"relative flex items-start mb-2 text-lg text-gray-800 leading-none font-medium\">\r\n            <span className=\"flex-1\">{item.title}</span>\r\n          </div>\r\n          <div className=\"flex-1 text-base text-gray-600 w-full\">\r\n            {item.summary}\r\n          </div>\r\n          <div className=\"flex items-center flex-1\">\r\n            <TooltipHost content={item.sourceName} closeDelay={500}>\r\n              <Text\r\n                className=\"\r\n              text-sm text-gray-400 max-w-xs\r\n              md:max-w-5xs\r\n              lg:max-w-xs\r\n              xl:max-w-5xs\r\n            \"\r\n                block\r\n                nowrap\r\n              >\r\n                {item.sourceName}\r\n              </Text>\r\n            </TooltipHost>\r\n            <Text className=\"text-sm text-gray-400\" nowrap>\r\n              /{item.time}\r\n            </Text>\r\n          </div>\r\n        </div>\r\n        {feedFooterElem}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedItem;\r\n\r\nfunction easeInCirc(x: number): number {\r\n  return 1 - Math.sqrt(1 - Math.pow(x, 2));\r\n}\r\n",{"ruleId":"82","severity":1,"message":"83","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":16},{"ruleId":"82","severity":1,"message":"86","line":57,"column":9,"nodeType":"84","messageId":"85","endLine":57,"endColumn":19},{"ruleId":"82","severity":1,"message":"87","line":58,"column":9,"nodeType":"84","messageId":"85","endLine":58,"endColumn":17},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"82","severity":1,"message":"92","line":30,"column":21,"nodeType":"84","messageId":"85","endLine":30,"endColumn":32},{"ruleId":"82","severity":1,"message":"93","line":30,"column":7,"nodeType":"84","messageId":"85","endLine":30,"endColumn":33},{"ruleId":"82","severity":1,"message":"94","line":31,"column":7,"nodeType":"84","messageId":"85","endLine":31,"endColumn":36},{"ruleId":"82","severity":1,"message":"95","line":68,"column":10,"nodeType":"84","messageId":"85","endLine":68,"endColumn":28},{"ruleId":"82","severity":1,"message":"96","line":74,"column":9,"nodeType":"84","messageId":"85","endLine":74,"endColumn":20},{"ruleId":"82","severity":1,"message":"97","line":86,"column":9,"nodeType":"84","messageId":"85","endLine":86,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":187,"column":6,"nodeType":"100","endLine":187,"endColumn":8,"suggestions":"101"},"@typescript-eslint/no-unused-vars","'FeedItem' is defined but never used.","Identifier","unusedVar","'routeMatch' is assigned a value but never used.","'location' is assigned a value but never used.","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'setViewType' is assigned a value but never used.","'pinSolid12Icon' is assigned a value but never used.","'pinSolidOff12Icon' is assigned a value but never used.","'slideBackAnimation' is assigned a value but never used.","'handleOnPan' is assigned a value but never used.","'handleOnPanEnd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onLeftSlide' and 'onRightSlide'. Either include them or remove the dependency array. If 'onLeftSlide' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [onLeftSlide, onRightSlide]",{"range":"107","text":"108"},[5341,5343],"[onLeftSlide, onRightSlide]"]