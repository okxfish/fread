[{"D:\\workspace\\fread\\src\\index.tsx":"1","D:\\workspace\\fread\\src\\reportWebVitals.ts":"2","D:\\workspace\\fread\\src\\App.tsx":"3","D:\\workspace\\fread\\src\\page\\home\\index.tsx":"4","D:\\workspace\\fread\\src\\component\\overviewPane\\index.tsx":"5","D:\\workspace\\fread\\src\\component\\feedsPane\\index.tsx":"6","D:\\workspace\\fread\\src\\component\\articlePane\\index.tsx":"7","D:\\workspace\\fread\\src\\component\\feedsPane\\container.tsx":"8","D:\\workspace\\fread\\src\\component\\feedsPane\\component.tsx":"9","D:\\workspace\\fread\\src\\mock\\feed.ts":"10","D:\\workspace\\fread\\src\\page\\feed\\index.tsx":"11","D:\\workspace\\fread\\src\\component\\overviewPane\\overviewCell.tsx":"12","D:\\workspace\\fread\\src\\page\\home\\sideBarItem.tsx":"13"},{"size":570,"mtime":1608625429880,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1608559821129,"results":"16","hashOfConfig":"15"},{"size":640,"mtime":1610175691348,"results":"17","hashOfConfig":"15"},{"size":4597,"mtime":1610382414760,"results":"18","hashOfConfig":"15"},{"size":4960,"mtime":1610271606029,"results":"19","hashOfConfig":"15"},{"size":77,"mtime":1608978858773,"results":"20","hashOfConfig":"15"},{"size":5640,"mtime":1610282484129,"results":"21","hashOfConfig":"15"},{"size":4437,"mtime":1609937129160,"results":"22","hashOfConfig":"15"},{"size":6599,"mtime":1610286349317,"results":"23","hashOfConfig":"15"},{"size":863,"mtime":1610174231291,"results":"24","hashOfConfig":"15"},{"size":3413,"mtime":1610368752549,"results":"25","hashOfConfig":"15"},{"size":735,"mtime":1610270034416,"results":"26","hashOfConfig":"15"},{"size":1104,"mtime":1610382354580,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gex1l0",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspace\\fread\\src\\index.tsx",[],"D:\\workspace\\fread\\src\\reportWebVitals.ts",[],"D:\\workspace\\fread\\src\\App.tsx",[],"D:\\workspace\\fread\\src\\page\\home\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\overviewPane\\index.tsx",["57","58"],"import React from \"react\";\r\nimport {\r\n  GroupedList,\r\n  IGroupRenderProps,\r\n  IGroupHeaderProps,\r\n  CommandBarButton,\r\n  IIconProps,\r\n  FontIcon,\r\n  SelectionMode,\r\n  IContextualMenuProps,\r\n} from \"office-ui-fabric-react\";\r\nimport { createGroups } from \"@fluentui/example-data\";\r\nimport OverviewCell from \"./overviewCell\";\r\nimport \"./style.css\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\n\r\nexport interface Props {\r\n  className?: string;\r\n}\r\n\r\nconst groupCount = 5;\r\nconst groupDepth = 1;\r\nconst createItems = (count: number): any[] => {\r\n  return Array.from({\r\n    length: count,\r\n  }).map((item: any, index: number): any => ({\r\n    key: index,\r\n    unreadCount: 2,\r\n    title: `this is rss source: ${index}`,\r\n  }));\r\n};\r\n\r\nconst items: any[] = createItems(Math.pow(groupCount, groupDepth + 1));\r\nconst groups = createGroups(groupCount, groupDepth, 0, groupCount);\r\nconst listItemClassName =\r\n  \"cursor-pointer items-center h-10 text-base flex hover:bg-gray-200 select-none\";\r\n\r\nconst moreIcon: IIconProps = { iconName: \"More\" };\r\n\r\nconst menuProps: IContextualMenuProps = {\r\n  items: [\r\n    {\r\n      key: \"emailMessage\",\r\n      text: \"rename\",\r\n      iconProps: { iconName: \"Edit\" },\r\n    },\r\n    {\r\n      key: \"calendarEvent\",\r\n      text: \"Calendar event\",\r\n      iconProps: { iconName: \"Calendar\" },\r\n    },\r\n  ],\r\n};\r\n\r\nconst OverviewPane = ({ className }: Props) => {\r\n  const history = useHistory();\r\n  const routeMatch = useRouteMatch();\r\n  const location = useLocation();\r\n  const commonPx = \"px-2\";\r\n\r\n  const onRenderCell = (\r\n    nestingDepth?: number,\r\n    item?: any,\r\n    itemIndex?: number\r\n  ): React.ReactNode => {\r\n    const onClick = () => history.push(`/feed/source?sourceName=${item.title}`);\r\n    return item && typeof itemIndex === \"number\" && itemIndex > -1 ? (\r\n      <div\r\n        className={`${listItemClassName} hover:bg-gray-300`}\r\n        style={{ paddingLeft: `${2 * (nestingDepth || 1)}rem` }}\r\n        onClick={onClick}\r\n      >\r\n        <FontIcon className=\"mr-2\" iconName=\"Dictionary\" />\r\n        {item.title}\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  const groupProps: IGroupRenderProps = {\r\n    onRenderHeader: (props?: IGroupHeaderProps): JSX.Element | null => {\r\n      if (props && props.group) {\r\n        const toggleCollapse = (): void => {\r\n          props.onToggleCollapse!(props.group!);\r\n        };\r\n\r\n        let unreadCount: number = 0;\r\n        const children = items.slice(\r\n          props.group.startIndex,\r\n          props.group.startIndex + props.group.count\r\n        );\r\n        children.forEach((item) => {\r\n          unreadCount += item.unreadCount;\r\n        });\r\n        return (\r\n          <div className={`${listItemClassName} ${commonPx} hover:bg-gray-300`}>\r\n            <FontIcon\r\n              className={`mr-2 transition-all transform ${\r\n                props.group!.isCollapsed ? \"\" : \"rotate-90\"\r\n              }`}\r\n              iconName=\"ChevronRight\"\r\n              onClick={toggleCollapse}\r\n            />\r\n            <span className=\"flex-1\" onClick={toggleCollapse}>\r\n              {props.group!.name} ({unreadCount})\r\n            </span>\r\n            <CommandBarButton\r\n              className=\"bg-transparent hover:bg-transparent focus:bg-transparent focus:outline-none min-w-0\"\r\n              menuProps={menuProps}\r\n              iconProps={moreIcon}\r\n              onRenderMenuIcon={() => null}\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={`${className} flex-1 flex flex-col min-h-0 cursor-pointer`}>\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"PreviewLink\" }}\r\n        content=\"All\"\r\n        onClick={()=>history.push('/feed/all')}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"FavoriteStar\" }}\r\n        content=\"Star\"\r\n        onClick={()=>history.push('/feed/star')}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"Archive\" }}\r\n        content=\"Archive\"\r\n        onClick={()=>history.push('/feed/archive')}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"Source\" }}\r\n        content=\"Source\"\r\n        onFooterRender={() => (\r\n          <CommandBarButton\r\n            className=\"bg-transparent hover:bg-transparent focus:bg-transparent focus:outline-none min-w-0\"\r\n            menuProps={menuProps}\r\n            iconProps={moreIcon}\r\n            onRenderMenuIcon={() => null}\r\n          />\r\n        )}\r\n      />\r\n      <GroupedList\r\n        className=\"flex-1 border-b border-t border-gray-400 overflow-y-auto scrollbar\"\r\n        items={items}\r\n        onRenderCell={onRenderCell}\r\n        groupProps={groupProps}\r\n        selectionMode={SelectionMode.none}\r\n        groups={groups}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewPane;\r\n",["59","60"],"D:\\workspace\\fread\\src\\component\\feedsPane\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\articlePane\\index.tsx",[],"D:\\workspace\\fread\\src\\component\\feedsPane\\container.tsx",[],"D:\\workspace\\fread\\src\\component\\feedsPane\\component.tsx",[],"D:\\workspace\\fread\\src\\mock\\feed.ts",[],"D:\\workspace\\fread\\src\\page\\feed\\index.tsx",["61","62"],"import React, { useState } from \"react\";\r\nimport { default as OverviewPane } from \"../../component/overviewPane\";\r\nimport { default as FeedsPane } from \"../../component/feedsPane\";\r\nimport { default as ArticlePane } from \"../../component/articlePane\";\r\nimport {\r\n  Modal,\r\n  IconButton,\r\n  DefaultButton,\r\n  IContextualMenuProps,\r\n  IIconProps,\r\n} from \"office-ui-fabric-react\";\r\nimport { useWindowSize } from \"react-use\";\r\nimport \"./style.css\";\r\n\r\nconst globalNavButtonIcon: IIconProps = { iconName: \"GlobalNavButton\" };\r\n\r\nconst menuProps: IContextualMenuProps = {\r\n  items: [\r\n    {\r\n      key: \"emailMessage\",\r\n      text: \"Email message\",\r\n      iconProps: { iconName: \"Mail\" },\r\n    },\r\n    {\r\n      key: \"calendarEvent\",\r\n      text: \"Calendar event\",\r\n      iconProps: { iconName: \"Calendar\" },\r\n    },\r\n  ],\r\n};\r\n\r\nconst FeedPage = () => {\r\n  const [isArticleModalOpen, setIsArticleModalOpen] = useState<boolean>(false);\r\n  const [isOverViewPaneOpen, setIsOverViewPaneOpen] = useState<boolean>(false);\r\n  const hideModal = (): void => setIsArticleModalOpen(false);\r\n  const openModal = (): void => setIsArticleModalOpen(true);\r\n  const { width: windowSize } = useWindowSize();\r\n\r\n  const onClickFeed = (): void => {\r\n    if (windowSize < 1280) {\r\n      openModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"\r\n        flex items-center justify-between row-start-1 row-span-1 bg-gray-100 border-b border-gray-200 col-start-1 col-span-4 z-30\r\n        sm:hidden\r\n      \"\r\n      >\r\n        <IconButton\r\n          className=\"text-gray-600 sm:text-gray-300\"\r\n          iconProps={globalNavButtonIcon}\r\n          onClick={() => setIsOverViewPaneOpen(!isOverViewPaneOpen)}\r\n        />\r\n      </div>\r\n      <div\r\n        className={`\r\n        ${isOverViewPaneOpen ? \"translate-x-0\" : \"-translate-x-full\"}\r\n        flex flex-col transform transition-all h-full\r\n        row-start-1 row-span-3 w-64 bg-gray-200\r\n        col-start-1 z-50 shadow-lg\r\n        sm:col-span-1 sm:col-start-2 sm:translate-x-0 sm:z-10 sm:shadow-none\r\n      `}\r\n      >\r\n        <IconButton\r\n          className=\"sm:hidden\"\r\n          iconProps={globalNavButtonIcon}\r\n          onClick={() => setIsOverViewPaneOpen(!isOverViewPaneOpen)}\r\n        />\r\n        <OverviewPane className=\"\" />\r\n      </div>\r\n      <div\r\n        className=\"\r\n        overflow-y-auto scrollbar bg-gray-50 h-full\r\n        col-start-1 col-span-4 row-start-2 row-span-2 \r\n        sm:col-start-3 sm:col-span-2 sm:row-start-1 sm:row-span-3 \r\n        xl:col-start-3 xl:col-span-1\"\r\n      >\r\n        <FeedsPane\r\n          className=\"h-full transition-all\"\r\n          onClickFeed={onClickFeed}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"\r\n          h-full scrollbar overflow-y-auto \r\n          hidden col-start-4 col-span-1 row-start-1 row-span-3\r\n          xl:block xl:col-start-4 xl:col-span-1\r\n      \"\r\n      >\r\n        <ArticlePane className=\"px-6\" />\r\n      </div>\r\n      <Modal\r\n        isOpen={isArticleModalOpen}\r\n        onDismiss={hideModal}\r\n        overlay={{ style: { backdropFilter: \"blur(42px)\" } }}\r\n        isBlocking={false}\r\n        styles={{ main: { maxHeight: \"100%\", maxWidth: \"100%\" } }}\r\n      >\r\n        <ArticlePane\r\n          className=\"px-6 max-h-screen md:max-h-modal\"\r\n          closeModal={() => setIsArticleModalOpen(false)}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedPage;\r\n","D:\\workspace\\fread\\src\\component\\overviewPane\\overviewCell.tsx",[],"D:\\workspace\\fread\\src\\page\\home\\sideBarItem.tsx",[],{"ruleId":"63","severity":1,"message":"64","line":57,"column":9,"nodeType":"65","messageId":"66","endLine":57,"endColumn":19},{"ruleId":"63","severity":1,"message":"67","line":58,"column":9,"nodeType":"65","messageId":"66","endLine":58,"endColumn":17},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"63","severity":1,"message":"72","line":8,"column":3,"nodeType":"65","messageId":"66","endLine":8,"endColumn":16},{"ruleId":"63","severity":1,"message":"73","line":17,"column":7,"nodeType":"65","messageId":"66","endLine":17,"endColumn":38},"@typescript-eslint/no-unused-vars","'routeMatch' is assigned a value but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"'DefaultButton' is defined but never used.","'menuProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]