[{"D:\\workspace\\project-personal\\fread\\src\\index.tsx":"1","D:\\workspace\\project-personal\\fread\\src\\App.tsx":"2","D:\\workspace\\project-personal\\fread\\src\\context\\viewType.ts":"3","D:\\workspace\\project-personal\\fread\\src\\component\\bookFilp\\index.tsx":"4","D:\\workspace\\project-personal\\fread\\src\\page\\home\\index.tsx":"5","D:\\workspace\\project-personal\\fread\\src\\utils\\useSearchParma.tsx":"6","D:\\workspace\\project-personal\\fread\\src\\page\\home\\sideBar.tsx":"7","D:\\workspace\\project-personal\\fread\\src\\page\\feed\\index.tsx":"8","D:\\workspace\\project-personal\\fread\\src\\page\\home\\sideBarItem.tsx":"9","D:\\workspace\\project-personal\\fread\\src\\page\\feed\\container.tsx":"10","D:\\workspace\\project-personal\\fread\\src\\context\\article.ts":"11","D:\\workspace\\project-personal\\fread\\src\\context\\feed.ts":"12","D:\\workspace\\project-personal\\fread\\src\\page\\feed\\utils.ts":"13","D:\\workspace\\project-personal\\fread\\src\\page\\feed\\reducer.ts":"14","D:\\workspace\\project-personal\\fread\\src\\page\\feed\\component.tsx":"15","D:\\workspace\\project-personal\\fread\\src\\mock\\feed.ts":"16","D:\\workspace\\project-personal\\fread\\src\\component\\articlePane\\index.tsx":"17","D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\index.tsx":"18","D:\\workspace\\project-personal\\fread\\src\\component\\overviewPane\\index.tsx":"19","D:\\workspace\\project-personal\\fread\\src\\component\\overviewPane\\overviewCell.tsx":"20","D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\container.tsx":"21","D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\component.tsx":"22","D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\feedItem.tsx":"23","D:\\workspace\\project-personal\\fread\\src\\utils\\useInoreaderToken.tsx":"24","D:\\workspace\\project-personal\\fread\\src\\api\\index.ts":"25","D:\\workspace\\project-personal\\fread\\src\\api\\auth.ts":"26","D:\\workspace\\project-personal\\fread\\src\\api\\inoreader.ts":"27","D:\\workspace\\project-personal\\fread\\src\\page\\oauth\\index.tsx":"28","D:\\workspace\\project-personal\\fread\\src\\page\\login\\index.tsx":"29"},{"size":656,"mtime":1620961145886,"results":"30","hashOfConfig":"31"},{"size":2351,"mtime":1621246541132,"results":"32","hashOfConfig":"31"},{"size":182,"mtime":1621246550473,"results":"33","hashOfConfig":"31"},{"size":805,"mtime":1612252247969,"results":"34","hashOfConfig":"31"},{"size":995,"mtime":1621216624302,"results":"35","hashOfConfig":"31"},{"size":1027,"mtime":1612252247985,"results":"36","hashOfConfig":"31"},{"size":4888,"mtime":1621217336555,"results":"37","hashOfConfig":"31"},{"size":63,"mtime":1612252247969,"results":"38","hashOfConfig":"31"},{"size":1356,"mtime":1621217148980,"results":"39","hashOfConfig":"31"},{"size":6113,"mtime":1621236373599,"results":"40","hashOfConfig":"31"},{"size":93,"mtime":1612252247969,"results":"41","hashOfConfig":"31"},{"size":90,"mtime":1612252247969,"results":"42","hashOfConfig":"31"},{"size":734,"mtime":1613701011929,"results":"43","hashOfConfig":"31"},{"size":2827,"mtime":1612252247969,"results":"44","hashOfConfig":"31"},{"size":3421,"mtime":1621213450684,"results":"45","hashOfConfig":"31"},{"size":862,"mtime":1612255449421,"results":"46","hashOfConfig":"31"},{"size":2242,"mtime":1621239760820,"results":"47","hashOfConfig":"31"},{"size":63,"mtime":1612252247969,"results":"48","hashOfConfig":"31"},{"size":7995,"mtime":1621213450683,"results":"49","hashOfConfig":"31"},{"size":775,"mtime":1612252247969,"results":"50","hashOfConfig":"31"},{"size":715,"mtime":1620982255856,"results":"51","hashOfConfig":"31"},{"size":4440,"mtime":1621220864577,"results":"52","hashOfConfig":"31"},{"size":10802,"mtime":1621246572601,"results":"53","hashOfConfig":"31"},{"size":752,"mtime":1621131213173,"results":"54","hashOfConfig":"31"},{"size":1463,"mtime":1621307628249,"results":"55","hashOfConfig":"31"},{"size":391,"mtime":1621131213162,"results":"56","hashOfConfig":"31"},{"size":2986,"mtime":1621222763857,"results":"57","hashOfConfig":"31"},{"size":607,"mtime":1621131213172,"results":"58","hashOfConfig":"31"},{"size":2163,"mtime":1621131213171,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"na5k5m",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"D:\\workspace\\project-personal\\fread\\src\\index.tsx",[],["125","126"],"D:\\workspace\\project-personal\\fread\\src\\App.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\context\\viewType.ts",[],"D:\\workspace\\project-personal\\fread\\src\\component\\bookFilp\\index.tsx",["127"],"import React, { useEffect } from \"react\";\r\nimport { useInterval, useToggle } from \"react-use\";\r\nimport \"./style.css\";\r\n\r\nconst BookFilp = () => {\r\n  const [isFilpEnd, toggle] = useToggle(false);\r\n\r\n  useEffect(() => {\r\n    toggle();\r\n  }, []);\r\n\r\n  useInterval(() => {\r\n    toggle();\r\n  }, 167 * 7);\r\n\r\n  return (\r\n    <div className={`book ${isFilpEnd ? \"filp-end\" : \"\"}`}>\r\n      <div className=\"back bg-gray-500\"></div>\r\n      <div className=\"book-page page6\"></div>\r\n      <div className=\"book-page page5\"></div>\r\n      <div className=\"book-page page4\"></div>\r\n      <div className=\"book-page page3\"></div>\r\n      <div className=\"book-page page2\"></div>\r\n      <div className=\"book-page page1\"></div>\r\n      <div className=\"front bg-gray-500\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookFilp;\r\n","D:\\workspace\\project-personal\\fread\\src\\page\\home\\index.tsx",["128"],"D:\\workspace\\project-personal\\fread\\src\\utils\\useSearchParma.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\page\\home\\sideBar.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\page\\feed\\index.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\page\\home\\sideBarItem.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\page\\feed\\container.tsx",["129","130"],"D:\\workspace\\project-personal\\fread\\src\\context\\article.ts",[],"D:\\workspace\\project-personal\\fread\\src\\context\\feed.ts",[],"D:\\workspace\\project-personal\\fread\\src\\page\\feed\\utils.ts",["131"],"import { useEffect, useState } from \"react\";\r\nimport Parser from \"rss-parser\";\r\n\r\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\r\nconst _RSS_SRC = \"https://rsshub.app/readhub/category/daily\";\r\nconst RSS_SRC = \"http://feeds.feedburner.com/ruanyifeng\";\r\n\r\nconst parser: Parser<any, any> = new Parser();\r\n\r\nexport const useFeedsData = () => {\r\n  const [feedsData, setFeedsData] = useState([{ content: \"\", title: \"\" }]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const feed = await parser.parseURL(CORS_PROXY + RSS_SRC);\r\n        setFeedsData(feed.items);\r\n        console.log(feed.items);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return feedsData;\r\n};\r\n",["132","133"],"D:\\workspace\\project-personal\\fread\\src\\page\\feed\\reducer.ts",[],"D:\\workspace\\project-personal\\fread\\src\\page\\feed\\component.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\mock\\feed.ts",[],"D:\\workspace\\project-personal\\fread\\src\\component\\articlePane\\index.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\index.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\component\\overviewPane\\index.tsx",["134","135","136","137"],"import React from \"react\";\r\nimport {\r\n  GroupedList,\r\n  IGroupRenderProps,\r\n  IGroupHeaderProps,\r\n  CommandBarButton,\r\n  IIconProps,\r\n  FontIcon,\r\n  SelectionMode,\r\n  IContextualMenuProps,\r\n} from \"office-ui-fabric-react\";\r\nimport { createGroups } from \"@fluentui/example-data\";\r\nimport OverviewCell from \"./overviewCell\";\r\nimport \"./style.css\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { default as api } from \"../../api\";\r\nimport { default as get } from \"lodash.get\";\r\nexport interface Props {\r\n  className?: string;\r\n}\r\n\r\nconst groupCount = 5;\r\nconst groupDepth = 1;\r\nconst createItems = (count: number): any[] => {\r\n  return Array.from({\r\n    length: count,\r\n  }).map((item: any, index: number): any => ({\r\n    key: index,\r\n    unreadCount: 2,\r\n    title: `this is rss source: ${index}`,\r\n  }));\r\n};\r\n\r\nconst items: any[] = createItems(Math.pow(groupCount, groupDepth + 1));\r\nconst groups = createGroups(groupCount, groupDepth, 0, groupCount);\r\nconst listItemClassName =\r\n  \"cursor-pointer items-center h-10 text-base flex hover:bg-gray-50 select-none\";\r\n\r\nconst moreIcon: IIconProps = { iconName: \"More\" };\r\n\r\nconst menuProps: IContextualMenuProps = {\r\n  items: [\r\n    {\r\n      key: \"emailMessage\",\r\n      text: \"rename\",\r\n      iconProps: { iconName: \"Edit\" },\r\n    },\r\n    {\r\n      key: \"calendarEvent\",\r\n      text: \"Calendar event\",\r\n      iconProps: { iconName: \"Calendar\" },\r\n    },\r\n  ],\r\n};\r\n\r\nconst OverviewPane = ({ className }: Props) => {\r\n  const history = useHistory();\r\n  const routeMatch = useRouteMatch();\r\n  const location = useLocation();\r\n  const commonPx = \"px-2\";\r\n\r\n  const subscriptionsListQuery = useQuery(\r\n    \"home/subscriptionsListQuery\",\r\n    () => api.inoreader.getSubscriptionList(),\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      select: (data) => {\r\n        return data.data.subscriptions.map((item) => {\r\n          return {\r\n            id: item.id,\r\n            key: item.id,\r\n            title: item.title,\r\n            iconUrl: item.iconUrl,\r\n          };\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const folderQuery = useQuery(\r\n    \"home/folderQuery\",\r\n    () => api.inoreader.getFolderOrTagList(1, 1),\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      select: (data) => {\r\n        const tagsAndFolders: any[] = get(data, \"data.tags\", []);\r\n        const tags: any[] = [];\r\n        const folders: any = tagsAndFolders.filter(\r\n          (item) => item.type === \"folder\"\r\n        );\r\n        return folders.map((folder) => {\r\n          const idPartSplited: any[] = folder.id.split(\"/\");\r\n          return {\r\n            count: 4,\r\n            key: folder.id,\r\n            name: idPartSplited[idPartSplited.length - 1],\r\n            startIndex: 4,\r\n          };\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  console.log(\"folderQuery/folders:\", folderQuery.data?.folders);\r\n  console.log(\"subscriptionsListQuery/tags:\", subscriptionsListQuery.data);\r\n\r\n  const onRenderCell = (\r\n    nestingDepth?: number,\r\n    item?: any,\r\n    itemIndex?: number\r\n  ): React.ReactNode => {\r\n    const onClick = () =>\r\n      history.push(`/feed?type=source&sourceId=${item.key}`);\r\n    return item && typeof itemIndex === \"number\" && itemIndex > -1 ? (\r\n      <div\r\n        className={`${listItemClassName} hover:bg-gray-200 rounded-sm`}\r\n        style={{ paddingLeft: `${2 * (nestingDepth || 1)}rem` }}\r\n        onClick={onClick}\r\n      >\r\n        {/* <FontIcon className=\"mr-2\" iconName=\"Dictionary\" /> */}\r\n        <img className=\"w-4 h-4 mr-2\" src={item.iconUrl} alt=\"\" />\r\n        <div className=\"truncate\">{item.title}</div>\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  const groupProps: IGroupRenderProps = {\r\n    onRenderHeader: (props?: IGroupHeaderProps): JSX.Element | null => {\r\n      if (props && props.group) {\r\n        const toggleCollapse = (): void => {\r\n          props.onToggleCollapse!(props.group!);\r\n        };\r\n\r\n        let unreadCount: number = 0;\r\n        const children = items.slice(\r\n          props.group.startIndex,\r\n          props.group.startIndex + props.group.count\r\n        );\r\n        children.forEach((item) => {\r\n          unreadCount += item.unreadCount;\r\n        });\r\n\r\n        return (\r\n          <div\r\n            className={`${listItemClassName} ${commonPx} hover:bg-gray-200 rounded-sm`}\r\n          >\r\n            <FontIcon\r\n              className={`mr-2 transition-all transform ${\r\n                props.group!.isCollapsed ? \"\" : \"rotate-90\"\r\n              }`}\r\n              iconName=\"ChevronRight\"\r\n              onClick={toggleCollapse}\r\n            />\r\n            <span className=\"flex-1\" onClick={toggleCollapse}>\r\n              {props.group!.name} ({unreadCount})\r\n            </span>\r\n            <CommandBarButton\r\n              className=\"bg-transparent hover:bg-transparent focus:bg-transparent focus:outline-none min-w-0\"\r\n              menuProps={menuProps}\r\n              iconProps={moreIcon}\r\n              onRenderMenuIcon={() => null}\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n  };\r\n\r\n  const folders = folderQuery.data;\r\n\r\n  return (\r\n    <div className={`${className} flex-1 flex flex-col min-h-0 cursor-pointer`}>\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"PreviewLink\" }}\r\n        content=\"all\"\r\n        onClick={() => history.push(\"/feed\")}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"FavoriteStar\" }}\r\n        content=\"star\"\r\n        onClick={() => history.push(\"/feed?type=star\")}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx}`}\r\n        iconProps={{ iconName: \"Archive\" }}\r\n        content=\"archive\"\r\n        onClick={() => history.push(\"/feed?type=archive\")}\r\n      />\r\n      <OverviewCell\r\n        className={`${commonPx} bg-gray-50 rounded-t-lg rounded-b-none sm:bg-transparent sm:rounded-b-sm sm:rounded-t-sm`}\r\n        iconProps={{ iconName: \"Source\" }}\r\n        content=\"source\"\r\n        onFooterRender={() => (\r\n          <CommandBarButton\r\n            className=\"bg-transparent hover:bg-transparent focus:bg-transparent focus:outline-none min-w-0\"\r\n            menuProps={menuProps}\r\n            iconProps={moreIcon}\r\n            onRenderMenuIcon={() => null}\r\n          />\r\n        )}\r\n      />\r\n      <GroupedList\r\n        className=\"flex-1 border-b border-t overflow-y-auto scrollbar-none bg-gray-50 sm:bg-transparent\"\r\n        items={subscriptionsListQuery.data || []}\r\n        onRenderCell={onRenderCell}\r\n        groupProps={groupProps}\r\n        selectionMode={SelectionMode.none}\r\n        groups={folders || []}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewPane;\r\n","D:\\workspace\\project-personal\\fread\\src\\component\\overviewPane\\overviewCell.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\container.tsx",["138","139"],"import React, { useContext } from \"react\";\r\nimport { default as FeedsPaneComponent } from \"./component\";\r\nimport {\r\n  FeedProps,\r\n  FeedGroup,\r\n} from \"./types\";\r\nimport { IGroup } from \"office-ui-fabric-react\";\r\nimport { FeedContext } from './../../context/feed';\r\n\r\nexport interface Props {\r\n  className?: string;\r\n  onClickFeed?(e: FeedProps): any;\r\n}\r\n\r\nconst FeedsPaneContainer = (props: Props) => {\r\n  const { state, dispatch, streamContents=[] } = useContext(FeedContext);\r\n\r\n  return (\r\n    <FeedsPaneComponent\r\n      isSidePaneOpen={state.isSidePaneOpen}\r\n      items={streamContents}\r\n      groups={[]}\r\n      dispatch={dispatch}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FeedsPaneContainer;\r\n","D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\component.tsx",["140"],"import { default as React, Dispatch } from \"react\";\r\nimport {\r\n  ActionButton,\r\n  GroupedList,\r\n  IGroup,\r\n  IGroupRenderProps,\r\n  IGroupHeaderProps,\r\n  ShimmerElementsGroup,\r\n  ShimmerElementType,\r\n  Shimmer,\r\n} from \"office-ui-fabric-react\";\r\nimport { FeedGroup, FeedProps } from \"./types\";\r\nimport \"./style.css\";\r\nimport FeedItem from \"./feedItem\";\r\nexport interface Props {\r\n  className?: string;\r\n  onClickFeed?(e: FeedProps): void;\r\n  items: FeedProps[];\r\n  groups: IGroup[];\r\n  isSidePaneOpen: boolean;\r\n  dispatch: Dispatch<any>;\r\n}\r\n\r\nconst FeedsPane = ({\r\n  className,\r\n  items,\r\n  groups,\r\n  onClickFeed,\r\n  dispatch,\r\n}: Props) => {\r\n  const onRenderHeader = (props?: IGroupHeaderProps): JSX.Element | null => {\r\n    if (props && props.group) {\r\n      return (\r\n        <div\r\n          className=\"\r\n           flex items-center \r\n           h-10 px-4 border-b\r\n           cursor-pointer \r\n           text-lg text-gray-600 font-bold leading-loose\r\n         \"\r\n        >\r\n          <div className=\"flex-1\">{props.group!.name}</div>\r\n          <span className=\"font-normal\">{props.group.count}</span>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const onRenderFooter = (): React.ReactElement | null => {\r\n    return (\r\n      <div className=\"flex justify-end px-4 pt-4 pb-6 border-t\">\r\n        <ActionButton className=\"text-blue-500 text-base mr-0 px-0\">\r\n          mark this group as read\r\n        </ActionButton>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const groupProps: IGroupRenderProps = {\r\n    onRenderHeader: onRenderHeader,\r\n    onRenderFooter: onRenderFooter,\r\n  };\r\n\r\n  const onRenderCell = (\r\n    nestingDepth?: number | undefined,\r\n    item?: any,\r\n    index?: number | undefined\r\n  ): React.ReactNode => {\r\n    const toggleIsReadById = (e: any): void => {\r\n      if (e && typeof e.stopPropagation === \"function\") {\r\n        e.stopPropagation();\r\n      }\r\n    };\r\n\r\n    const toggleIsStarById = (e: any): void => {\r\n      if (e && typeof e.stopPropagation === \"function\") {\r\n        e.stopPropagation();\r\n      }\r\n    };\r\n\r\n    const toggleIsPinById = (e: any): void => {\r\n      if (e && typeof e.stopPropagation === \"function\") {\r\n        e.stopPropagation();\r\n      }\r\n    };\r\n\r\n    return (\r\n      <FeedItem\r\n        item={item}\r\n        itemIndex={index}\r\n        onClickFeed={onClickFeed}\r\n        onPinClick={toggleIsPinById}\r\n        onStarClick={toggleIsStarById}\r\n        onReadClick={toggleIsReadById}\r\n        onLeftSlide={toggleIsReadById}\r\n        onRightSlide={toggleIsStarById}\r\n      />\r\n    );\r\n  };\r\n\r\n  const getCustomElements = (number:number): JSX.Element => {\r\n    const rowRender = (item, index): JSX.Element => (\r\n      <div key={index}>\r\n        <div\r\n          style={{ width: \"100%\", display: \"flex\", alignItems: \"flex-start\" }}\r\n        >\r\n          <ShimmerElementsGroup\r\n            shimmerElements={[\r\n              { type: ShimmerElementType.line, height: 100, width: 100 },\r\n              { type: ShimmerElementType.gap, width: 10, height: 100 },\r\n            ]}\r\n          />\r\n          <ShimmerElementsGroup\r\n            flexWrap\r\n            width={\"calc(100% - 110px)\"}\r\n            shimmerElements={[\r\n              { type: ShimmerElementType.line, width: \"20%\", height: 20 },\r\n              { type: ShimmerElementType.gap, width: \"80%\", height: 20 },\r\n              { type: ShimmerElementType.gap, width: \"100%\" },\r\n              { type: ShimmerElementType.line, width: \"100%\", height: 20 },\r\n              { type: ShimmerElementType.gap, width: \"100%\" },\r\n              { type: ShimmerElementType.line, width: \"100%\", height: 20 },\r\n            ]}\r\n          />\r\n        </div>\r\n        <ShimmerElementsGroup\r\n          shimmerElements={[\r\n            { type: ShimmerElementType.gap, height: 24, width: \"100%\" },\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n\r\n    return <div>{Array.from({ length: number }).map(rowRender)}</div>;\r\n  };\r\n\r\n  if (!items || (Array.isArray(items) && items.length === 0)) {\r\n    return (\r\n      <Shimmer\r\n        className=\"mt-4 mx-auto w-11/12\"\r\n        customElementsGroup={getCustomElements(5)}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GroupedList\r\n        className={`${className}`}\r\n        items={items}\r\n        onRenderCell={onRenderCell}\r\n        onShouldVirtualize={() => true}\r\n        groupProps={groupProps}\r\n        // groups={groups}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedsPane;\r\n","D:\\workspace\\project-personal\\fread\\src\\component\\feedsPane\\feedItem.tsx",["141","142","143","144"],"D:\\workspace\\project-personal\\fread\\src\\utils\\useInoreaderToken.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\api\\index.ts",[],"D:\\workspace\\project-personal\\fread\\src\\api\\auth.ts",[],"D:\\workspace\\project-personal\\fread\\src\\api\\inoreader.ts",[],"D:\\workspace\\project-personal\\fread\\src\\page\\oauth\\index.tsx",[],"D:\\workspace\\project-personal\\fread\\src\\page\\login\\index.tsx",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":10,"column":6,"nodeType":"151","endLine":10,"endColumn":8,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":11,"column":9,"nodeType":"155","messageId":"156","endLine":11,"endColumn":20},{"ruleId":"153","severity":1,"message":"157","line":10,"column":10,"nodeType":"155","messageId":"156","endLine":10,"endColumn":24},{"ruleId":"149","severity":1,"message":"158","line":156,"column":5,"nodeType":"151","endLine":156,"endColumn":48,"suggestions":"159"},{"ruleId":"153","severity":1,"message":"160","line":5,"column":7,"nodeType":"155","messageId":"156","endLine":5,"endColumn":15},{"ruleId":"145","replacedBy":"161"},{"ruleId":"147","replacedBy":"162"},{"ruleId":"153","severity":1,"message":"163","line":36,"column":7,"nodeType":"155","messageId":"156","endLine":36,"endColumn":13},{"ruleId":"153","severity":1,"message":"164","line":59,"column":9,"nodeType":"155","messageId":"156","endLine":59,"endColumn":19},{"ruleId":"153","severity":1,"message":"165","line":60,"column":9,"nodeType":"155","messageId":"156","endLine":60,"endColumn":17},{"ruleId":"153","severity":1,"message":"166","line":88,"column":15,"nodeType":"155","messageId":"156","endLine":88,"endColumn":26},{"ruleId":"153","severity":1,"message":"167","line":5,"column":3,"nodeType":"155","messageId":"156","endLine":5,"endColumn":12},{"ruleId":"153","severity":1,"message":"168","line":7,"column":10,"nodeType":"155","messageId":"156","endLine":7,"endColumn":16},{"ruleId":"153","severity":1,"message":"167","line":12,"column":10,"nodeType":"155","messageId":"156","endLine":12,"endColumn":19},{"ruleId":"153","severity":1,"message":"169","line":77,"column":10,"nodeType":"155","messageId":"156","endLine":77,"endColumn":28},{"ruleId":"153","severity":1,"message":"170","line":85,"column":9,"nodeType":"155","messageId":"156","endLine":85,"endColumn":20},{"ruleId":"153","severity":1,"message":"171","line":97,"column":9,"nodeType":"155","messageId":"156","endLine":97,"endColumn":23},{"ruleId":"149","severity":1,"message":"172","line":204,"column":6,"nodeType":"151","endLine":204,"endColumn":8,"suggestions":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggle'. Either include it or remove the dependency array.","ArrayExpression",["176"],"@typescript-eslint/no-unused-vars","'emptyRender' is assigned a value but never used.","Identifier","unusedVar","'useSearchParam' is defined but never used.","React Hook useCallback has a missing dependency: 'queryClient'. Either include it or remove the dependency array.",["177"],"'_RSS_SRC' is assigned a value but never used.",["174"],["175"],"'groups' is assigned a value but never used.","'routeMatch' is assigned a value but never used.","'location' is assigned a value but never used.","'tags' is assigned a value but never used.","'FeedGroup' is defined but never used.","'IGroup' is defined but never used.","'slideBackAnimation' is assigned a value but never used.","'handleOnPan' is assigned a value but never used.","'handleOnPanEnd' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onLeftSlide' and 'onRightSlide'. Either include them or remove the dependency array. If 'onLeftSlide' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [toggle]",{"range":"185","text":"186"},"Update the dependencies array to be: [getArticleById, queryClient, state.currenActivedFeedId]",{"range":"187","text":"188"},"Update the dependencies array to be: [onLeftSlide, onRightSlide]",{"range":"189","text":"190"},[239,241],"[toggle]",[4697,4740],"[getArticleById, queryClient, state.currenActivedFeedId]",[5728,5730],"[onLeftSlide, onRightSlide]"]