[{"C:\\Users\\lzh11\\Workspace\\fread\\src\\index.tsx":"1","C:\\Users\\lzh11\\Workspace\\fread\\src\\App.tsx":"2","C:\\Users\\lzh11\\Workspace\\fread\\src\\reducer.ts":"3","C:\\Users\\lzh11\\Workspace\\fread\\src\\theme.ts":"4","C:\\Users\\lzh11\\Workspace\\fread\\src\\utils\\useInoreaderToken.tsx":"5","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\oauth\\index.tsx":"6","C:\\Users\\lzh11\\Workspace\\fread\\src\\component\\bookFilp\\index.tsx":"7","C:\\Users\\lzh11\\Workspace\\fread\\src\\context\\index.ts":"8","C:\\Users\\lzh11\\Workspace\\fread\\src\\api\\index.ts":"9","C:\\Users\\lzh11\\Workspace\\fread\\src\\context\\setting.ts":"10","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\login\\index.tsx":"11","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\home\\index.tsx":"12","C:\\Users\\lzh11\\Workspace\\fread\\src\\api\\inoreader.ts":"13","C:\\Users\\lzh11\\Workspace\\fread\\src\\api\\auth.ts":"14","C:\\Users\\lzh11\\Workspace\\fread\\src\\context\\app.ts":"15","C:\\Users\\lzh11\\Workspace\\fread\\src\\context\\userInfo.ts":"16","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\home\\HomeCommandBar.tsx":"17","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\index.tsx":"18","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\settings\\index.tsx":"19","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\feed.tsx":"20","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\settings\\components\\feedManage.tsx":"21","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\utils.ts":"22","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\overviewPane.tsx":"23","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\feedsPane.tsx":"24","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\articlePane.tsx":"25","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\overviewCell.tsx":"26","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\feedPaneComponent.tsx":"27","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\home\\sideBarButton.tsx":"28","C:\\Users\\lzh11\\Workspace\\fread\\src\\utils\\useIntersectionObserver.ts":"29","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\feedShimmer.tsx":"30","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\feedItem.tsx":"31","C:\\Users\\lzh11\\Workspace\\fread\\src\\context\\article.ts":"32","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\home\\Header.tsx":"33","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\home\\AddFeed.tsx":"34","C:\\Users\\lzh11\\Workspace\\fread\\src\\component\\halfScreenPanel\\halfScreenPanel.tsx":"35","C:\\Users\\lzh11\\Workspace\\fread\\src\\context\\feed.ts":"36","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\home\\viewSettingPane.tsx":"37","C:\\Users\\lzh11\\Workspace\\fread\\src\\utils\\useSearchParma.tsx":"38","C:\\Users\\lzh11\\Workspace\\fread\\src\\component\\swipeout\\index.js":"39","C:\\Users\\lzh11\\Workspace\\fread\\src\\api\\mockData.ts":"40"},{"size":1481,"mtime":1629786467433,"results":"41","hashOfConfig":"42"},{"size":4210,"mtime":1630226301956,"results":"43","hashOfConfig":"42"},{"size":3248,"mtime":1629786467784,"results":"44","hashOfConfig":"42"},{"size":6267,"mtime":1630315413957,"results":"45","hashOfConfig":"42"},{"size":724,"mtime":1630152176854,"results":"46","hashOfConfig":"42"},{"size":582,"mtime":1629786467720,"results":"47","hashOfConfig":"42"},{"size":775,"mtime":1629786467333,"results":"48","hashOfConfig":"42"},{"size":452,"mtime":1629786467402,"results":"49","hashOfConfig":"42"},{"size":1937,"mtime":1630291280626,"results":"50","hashOfConfig":"42"},{"size":1009,"mtime":1630317876400,"results":"51","hashOfConfig":"42"},{"size":4039,"mtime":1629786467686,"results":"52","hashOfConfig":"42"},{"size":5305,"mtime":1630293432344,"results":"53","hashOfConfig":"42"},{"size":5769,"mtime":1629786467296,"results":"54","hashOfConfig":"42"},{"size":375,"mtime":1629786467277,"results":"55","hashOfConfig":"42"},{"size":224,"mtime":1629786467376,"results":"56","hashOfConfig":"42"},{"size":91,"mtime":1629786467420,"results":"57","hashOfConfig":"42"},{"size":7397,"mtime":1630291851526,"results":"58","hashOfConfig":"42"},{"size":56,"mtime":1629786467539,"results":"59","hashOfConfig":"42"},{"size":3038,"mtime":1630292416186,"results":"60","hashOfConfig":"42"},{"size":7403,"mtime":1630291236760,"results":"61","hashOfConfig":"42"},{"size":5526,"mtime":1629786467754,"results":"62","hashOfConfig":"42"},{"size":387,"mtime":1629786467592,"results":"63","hashOfConfig":"42"},{"size":8452,"mtime":1630335158130,"results":"64","hashOfConfig":"42"},{"size":721,"mtime":1629786467530,"results":"65","hashOfConfig":"42"},{"size":4448,"mtime":1630313362248,"results":"66","hashOfConfig":"42"},{"size":911,"mtime":1629786467551,"results":"67","hashOfConfig":"42"},{"size":4028,"mtime":1629786467501,"results":"68","hashOfConfig":"42"},{"size":913,"mtime":1629786467653,"results":"69","hashOfConfig":"42"},{"size":1130,"mtime":1629786467895,"results":"70","hashOfConfig":"42"},{"size":1989,"mtime":1629786467514,"results":"71","hashOfConfig":"42"},{"size":9993,"mtime":1630336836440,"results":"72","hashOfConfig":"42"},{"size":149,"mtime":1629786467386,"results":"73","hashOfConfig":"42"},{"size":2686,"mtime":1630292575909,"results":"74","hashOfConfig":"42"},{"size":3508,"mtime":1629786467611,"results":"75","hashOfConfig":"42"},{"size":927,"mtime":1629786467362,"results":"76","hashOfConfig":"42"},{"size":153,"mtime":1629786467395,"results":"77","hashOfConfig":"42"},{"size":2934,"mtime":1629786467665,"results":"78","hashOfConfig":"42"},{"size":993,"mtime":1629786467908,"results":"79","hashOfConfig":"42"},{"size":11864,"mtime":1630149583532,"results":"80","hashOfConfig":"42"},{"size":6737,"mtime":1630310385119,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1oqvp7f",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lzh11\\Workspace\\fread\\src\\index.tsx",[],["170","171"],"C:\\Users\\lzh11\\Workspace\\fread\\src\\App.tsx",["172"],"import { useState, useEffect, useReducer, Suspense, lazy } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport BookFilp from \"./component/bookFilp/index\";\nimport Oauth from \"./page/oauth/index\";\nimport {\n  UserInfoContext,\n  CurrenActivedFeedIdContext,\n  DispatchContext,\n  StoreContext,\n  SettingContext,\n} from \"./context\";\nimport { default as api } from \"./api\";\nimport { useInoreaderToken } from \"./utils/useInoreaderToken\";\nimport { useQuery } from \"react-query\";\nimport { getInitSetting, reducer } from \"./reducer\";\nimport { ThemeProvider, getTheme } from \"@fluentui/react\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport classnames from \"classnames\";\nimport \"./App.css\";\nimport \"./style/utils.css\";\n\nconst CallBackOnUnmount = ({ cb }) => {\n  useEffect(() => () => cb(), [cb]);\n  return null;\n};\n\nconst Login = lazy(() => import(\"./page/login\"));\nconst Home = lazy(() => import(\"./page/home\"));\n\nconst currentTheme = getTheme();\nconsole.log(currentTheme);\n\nfunction App() {\n  const [store, dispatch] = useReducer(reducer, undefined, () => {\n    return {\n      currenActivedFeedId: \"\",\n      isArticleModalOpen: false,\n      modals: {},\n      setting: getInitSetting(),\n    };\n  });\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const inoreaderToken = useInoreaderToken();\n\n  const userInfoQuery = useQuery(\n    [\"userInfo\", inoreaderToken],\n    async () => {\n      const res = await api.inoreader.getUserInfo();\n      return res.data;\n    },\n    {\n      refetchOnWindowFocus: false,\n      enabled: !!inoreaderToken,\n    }\n  );\n\n  useEffect(() => {\n    try {\n      localStorage.setItem(\"setting\", JSON.stringify(store.setting));\n    } catch (error) {\n      console.error(error);\n    }\n  }, [store.setting]);\n\n  const loaddingAnimationRender = () => {\n    return (\n      <CSSTransition\n        in={isLoading}\n        timeout={{\n          exit: 400,\n        }}\n        unmountOnExit\n        className=\"fixed top-0 left-0 w-screen h-screen flex flex-col items-center pt-32 z-50 full-screen-loading__animation-wrapper\"\n      >\n        <div className=\"full-screen-loading__wrapper\">\n          <BookFilp />\n        </div>\n      </CSSTransition>\n    );\n  };\n\n  const { currenActivedFeedId, setting } = store;\n\n  const theme = setting.isDarkMode ? darkTheme : lightTheme;\n\n  return (\n    <ThemeProvider\n      applyTo=\"body\"\n      theme={theme}\n    >\n      <StoreContext.Provider value={store}>\n        <DispatchContext.Provider value={dispatch}>\n          <CurrenActivedFeedIdContext.Provider value={currenActivedFeedId}>\n            <SettingContext.Provider value={setting}>\n              <UserInfoContext.Provider value={userInfoQuery.data}>\n                <div\n                  className={classnames(\"App\", { dark: setting.isDarkMode })}\n                  style={{\n                    backgroundColor: theme?.palette?.neutralLight\n                  }}\n                >\n                  <Router>\n                    {/* {loaddingAnimationRender()} */}\n                    <Suspense\n                      fallback={\n                        <CallBackOnUnmount cb={() => setIsLoading(false)} />\n                      }\n                    >\n                      <Switch>\n                        <Route path=\"/oauth\" component={Oauth} />\n                        <Route path=\"/login\" component={Login} />\n                        <Route\n                          path=\"/\"\n                          render={() => {\n                            if (inoreaderToken) {\n                              return <Home />;\n                            } else {\n                              return <Redirect path=\"/\" to=\"/login\" />;\n                            }\n                          }}\n                        />\n                      </Switch>\n                    </Suspense>\n                  </Router>\n                </div>\n              </UserInfoContext.Provider>\n            </SettingContext.Provider>\n          </CurrenActivedFeedIdContext.Provider>\n        </DispatchContext.Provider>\n      </StoreContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\lzh11\\Workspace\\fread\\src\\reducer.ts",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\theme.ts",["173"],"C:\\Users\\lzh11\\Workspace\\fread\\src\\utils\\useInoreaderToken.tsx",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\oauth\\index.tsx",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\component\\bookFilp\\index.tsx",["174"],"import React, { useEffect } from \"react\";\nimport { useInterval, useToggle } from \"react-use\";\nimport \"./style.css\";\n\nconst BookFilp = () => {\n  const [isFilpEnd, toggle] = useToggle(false);\n\n  useEffect(() => {\n    toggle();\n  }, []);\n\n  useInterval(() => {\n    toggle();\n  }, 167 * 7);\n\n  return (\n    <div className={`book ${isFilpEnd ? \"filp-end\" : \"\"}`}>\n      <div className=\"back bg-gray-600\"></div>\n      <div className=\"book-page page6\"></div>\n      <div className=\"book-page page5\"></div>\n      <div className=\"book-page page4\"></div>\n      <div className=\"book-page page3\"></div>\n      <div className=\"book-page page2\"></div>\n      <div className=\"book-page page1\"></div>\n      <div className=\"front bg-gray-600\"></div>\n    </div>\n  );\n};\n\nexport default BookFilp;\n","C:\\Users\\lzh11\\Workspace\\fread\\src\\context\\index.ts",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\api\\index.ts",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\context\\setting.ts",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\login\\index.tsx",["175","176"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { default as api } from \"../../api\";\nimport {\n  TextField,\n  PrimaryButton,\n  DefaultButton,\n  Separator,\n  Spinner,\n  SpinnerSize,\n  Stack,\n  Image,\n  Label,\n  Text,\n  useTheme,\n  mergeStyleSets,\n} from \"@fluentui/react\";\nimport \"./style.css\";\nimport { useInoreaderToken } from \"./../../utils/useInoreaderToken\";\nimport { useHistory } from \"react-router-dom\";\nimport { SettingContext } from './../../context/setting';\nimport BookFilp from \"./../../component/bookFilp/index\";\n\nconst Login = () => {\n  const { palette } = useTheme();\n  const [isLoginWithInoreader, setIsLoginWithInoreader] =\n  useState<boolean>(false);\n  const { isDarkMode } = useContext(SettingContext);\n\n  const history = useHistory();\n  const inoreaderToken = useInoreaderToken();\n\n  const classNames = mergeStyleSets({\n    baseStack: [\n      \"w-full md:w-192 mx-auto rounded-lg shadow-xl border-3 overflow-hidden flex-col sm:flex-row h-full sm:h-auto\",\n      {\n        backgroundColor: palette.neutralQuaternaryAlt\n      }\n    ],\n    leftCol: [\"relative z-10 group cursor-pointer px-4 sm:px-6\"],\n    rightCol: [\n      \"rounded-t-2xl sm:rounded-t-none shadow-md sm:shadow-none\",\n      {\n        backgroundColor: palette.neutralLighter\n      }\n    ],\n  });\n\n  useEffect(() => {\n    if (inoreaderToken) {\n      setIsLoginWithInoreader(false);\n      history.push(\"/\");\n    }\n  }, [inoreaderToken, history]);\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n  };\n\n  const loginWithInoreader = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await api.auth.getInoreaderAuthURI();\n      setIsLoginWithInoreader(true);\n      window.open(res.data.data.auth_uri);\n    } catch (error) {\n      alert(`login with inoreader: ${error}`);\n    }\n  };\n\n  return (\n    <div className=\"login-page w-screen h-screen sm:pt-32\">\n      <Stack horizontal className={classNames.baseStack}>\n        <Stack.Item grow={1} className=\"flex flex-col\">\n          <div className=\"flex-1 flex justify-center items-center\">\n            {isLoginWithInoreader ? (\n              <Spinner\n                size={SpinnerSize.large}\n                styles={{ circle: \"w-16 h-16 border-4\" }}\n              />\n            ) : (\n              <Image\n                className=\"login-page__butterfly-image w-32 transform translate-y-12 sm:w-48 md:w-72\"\n                src=\"/images/Z-but.webp\"\n              />\n            )}\n          </div>\n          <Stack className=\"text-center mb-16\">\n            <Text className=\"\">\n              <a\n                href=\"https://github.com/uwpdver/fread\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Homepage\n              </a>\n            </Text>\n            <Text className=\"text-sm\">version: 1.0</Text>\n          </Stack>\n        </Stack.Item>\n        <Stack.Item\n          grow={1}\n          className={classNames.rightCol}\n        >\n          <form className=\"p-8 pt-10 h-128\" onSubmit={handleOnSubmit}>\n            <Label className=\"text-center\">Welcome To Fread</Label>\n            <TextField\n              className=\"mb-2\"\n              label=\"Account\"\n              name=\"account\"\n              type=\"email\"\n              required\n              placeholder=\"your emaill here\"\n            />\n            <TextField\n              className=\"mb-4\"\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              required\n              placeholder=\"you password here\"\n            />\n            <PrimaryButton className=\"block w-full mt-6\" type=\"submit\">\n              log in\n            </PrimaryButton>\n            <Separator className=\"mt-8 mb-4\" alignContent=\"center\" />\n            <DefaultButton className=\"w-full\" onClick={loginWithInoreader}>\n              login with inoreader\n            </DefaultButton>\n          </form>\n        </Stack.Item>\n      </Stack>\n      <div className=\"max-w-2xl mx-auto mt-8 px-4\"></div>\n    </div>\n  );\n};\n\nexport default Login;\n","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\home\\index.tsx",["177","178","179","180"],"C:\\Users\\lzh11\\Workspace\\fread\\src\\api\\inoreader.ts",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\api\\auth.ts",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\context\\app.ts",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\context\\userInfo.ts",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\home\\HomeCommandBar.tsx",["181"],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\index.tsx",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\settings\\index.tsx",["182"],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\feed.tsx",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\settings\\components\\feedManage.tsx",["183"],"import { useMutation, useQueryClient } from \"react-query\";\nimport { get, isEmpty } from \"lodash\";\nimport { Subscription } from \"./../../../api/mockData\";\nimport {\n  DetailsList,\n  IColumn,\n  IconButton,\n  Image,\n  Stack,\n  Text,\n  Modal,\n  TextField,\n  DefaultButton,\n  PrimaryButton,\n  Label,\n  Spinner,\n  SpinnerSize,\n} from \"@fluentui/react\";\nimport api from \"../../../api\";\nimport { produce, current } from \"immer\";\nimport { useState } from \"react\";\n\nconst FeedManage = () => {\n  const [isRenameModalOpened, setIsRenameModalOpened] = useState(false);\n  const [seletedIndex, setSeletedIndex] = useState(-1);\n  const queryClient = useQueryClient();\n  const feedsQueryData = queryClient.getQueryData(\n    \"home/subscriptionsListQuery\"\n  );\n  const entities: Subscription = get(\n    feedsQueryData,\n    \"entities.subscription\",\n    {}\n  );\n\n  const result: string[] = get(feedsQueryData, \"result\", []);\n\n  const feeds = result.map((id) => {\n    return entities[id];\n  });\n\n  const deleteFeedMutation = useMutation(\n    (streamId: string): any => api.inoreader.unsubscription(streamId),\n    {\n      onSuccess: (data, streamId: string) => {\n        queryClient.setQueryData(\n          \"home/subscriptionsListQuery\",\n          produce((data: any) => {\n            data.result = data.result.filter((item) => item !== streamId);\n          })\n        );\n      },\n    }\n  );\n\n  const renameFeedMutation = useMutation(\n    ({ streamId, title }: { streamId: string; title: string }): any =>\n      api.inoreader.renameFeed(streamId, title),\n    {\n      onSuccess: (data, { streamId, title }) => {\n        queryClient.setQueryData(\n          \"home/subscriptionsListQuery\",\n          produce((data: any) => {\n            const targetFeed = get(\n              data,\n              `entities.subscription['${streamId}']`\n            );\n            console.log(\"before\", current(targetFeed));\n            targetFeed.title = title;\n            console.log(\"after\", current(targetFeed));\n            setIsRenameModalOpened(false);\n          })\n        );\n      },\n    }\n  );\n\n  const columns: IColumn[] = [\n    {\n      key: \"column1\",\n      name: \"Icon\",\n      isIconOnly: true,\n      fieldName: \"Icon\",\n      minWidth: 16,\n      maxWidth: 24,\n      onColumnClick: () => {},\n      onRender: (item: any) => (\n        <Image src={item.iconUrl} className=\" h-4 w-4\" />\n      ),\n    },\n    {\n      key: \"column2\",\n      name: \"Name\",\n      className: \"flex-1\",\n      isIconOnly: false,\n      fieldName: \"title\",\n      minWidth: 128,\n      maxWidth: 400,\n    },\n    {\n      key: \"column3\",\n      name: \"Actions\",\n      isIconOnly: false,\n      minWidth: 32,\n      maxWidth: 128,\n      onRender: (item: Subscription, index?: number) => {\n        const onDeleteBtnClick = () => deleteFeedMutation.mutate(item.id);\n\n        const onRenameBtnClick = () => {\n          if (typeof index === \"number\" && index < feeds.length) {\n            setSeletedIndex(index);\n            setIsRenameModalOpened(true);\n          } else {\n            console.error(\"index is not a number or out of the bound of feeds\");\n          }\n        };\n\n        return (\n          <Stack horizontal tokens={{ childrenGap: 8 }}>\n            <IconButton\n              iconProps={{ iconName: \"Rename\" }}\n              onClick={onRenameBtnClick}\n            />\n            <IconButton\n              iconProps={{ iconName: \"Delete\" }}\n              onClick={onDeleteBtnClick}\n            />\n          </Stack>\n        );\n      },\n    },\n  ];\n\n  const onRename = (e) => {\n    e.preventDefault();\n    if (seletedIndex >= 0 && !isEmpty(feeds)) {\n      const form = e.target;\n      const streamId = feeds[seletedIndex].id;\n      const newTitle = form[\"newFeedTitle\"].value;\n      renameFeedMutation.mutate({ streamId, title: newTitle });\n    }\n  };\n\n  return (\n    <div className=\"h-full w-full overflow-y-auto scrollbar\">\n    <DetailsList items={feeds} columns={columns} />\n      <Modal isOpen={isRenameModalOpened}>\n        <form onSubmit={onRename}>\n          <div className=\"p-8\">\n            <Stack className=\"mb-4\" horizontal>\n              <Label className=\"flex-1 text-xl\">Rename the feed</Label>\n            </Stack>\n            <Stack>\n              <Label>New Title</Label>\n              <TextField\n                name=\"newFeedTitle\"\n                placeholder={get(\n                  feeds,\n                  `[${seletedIndex}].title`,\n                  \"input a new title\"\n                )}\n                className=\"w-96 max-w-full mb-4\"\n                required\n              />\n            </Stack>\n          </div>\n          <Stack\n            className=\"px-8 py-6\"\n            horizontal\n            horizontalAlign=\"end\"\n            verticalAlign=\"center\"\n            tokens={{ childrenGap: \"16px\" }}\n          >\n            <Stack.Item grow={1}>\n              <DefaultButton\n                className=\"w-full\"\n                onClick={() => setIsRenameModalOpened(false)}\n                text=\"Cancel\"\n              />\n            </Stack.Item>\n            <Stack.Item grow={1}>\n              <PrimaryButton\n                className=\"w-full\"\n                disabled={renameFeedMutation.isLoading}\n                type=\"submit\"\n              >\n                Rename\n                {renameFeedMutation.isLoading && (\n                  <Spinner size={SpinnerSize.xSmall} className=\"ml-2\" />\n                )}\n              </PrimaryButton>\n            </Stack.Item>\n          </Stack>\n        </form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default FeedManage;\n","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\utils.ts",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\overviewPane.tsx",["184"],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\feedsPane.tsx",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\articlePane.tsx",["185"],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\overviewCell.tsx",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\feedPaneComponent.tsx",["186","187"],"import React, { useCallback, useContext } from \"react\";\nimport { FeedItem, FeedProps } from \"./types\";\nimport FeedItemComponent from \"./feedItem\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { isEmpty } from \"lodash\";\nimport {\n  Stack,\n  Spinner,\n  SpinnerSize,\n  FontIcon,\n  List,\n  Text,\n} from \"@fluentui/react\";\nimport FeedShimmer from \"./feedShimmer\";\nimport {\n  CurrenActivedFeedIdContext,\n  SetFeedItemContext,\n  SettingContext,\n} from \"./../../context\";\nimport { useMutation } from \"react-query\";\nimport api from \"../../api\";\n\nexport interface Props {\n  className?: string;\n  items: FeedItem[];\n  hasNextPage: boolean;\n  isFetching: boolean;\n  fetchNextPage(): any;\n  getScrollParent(): any;\n}\n\nconst FeedPaneComponent = ({\n  className,\n  items,\n  hasNextPage,\n  isFetching,\n  fetchNextPage,\n  getScrollParent,\n}: Props) => {\n  const setArticleDataById = useContext(SetFeedItemContext);\n  const currenActivedFeedId = useContext(CurrenActivedFeedIdContext);\n  const {\n    layout: { viewType },\n  } = useContext(SettingContext);\n\n  const markAboveAsReadMutation = useMutation(\n    ({ ids, asUnread }: { ids: string[]; asUnread?: boolean }): any =>\n      api.inoreader.markArticleAsRead(ids, asUnread),\n    {\n      onMutate: ({ ids, asUnread }) => {\n        for (const id of ids) {\n          setArticleDataById(id, (article) => {\n            article.isRead = !asUnread;\n          });\n        }\n      },\n      onError: (error, { ids, asUnread }) => {\n        for (const id of ids) {\n          setArticleDataById(id, (article) => {\n            article.isRead = asUnread;\n          });\n        }\n      },\n    }\n  );\n\n  const allItemIds: string[] = items.map((item) => item.id);\n\n  const onAboveRead = useCallback(\n    (e: any, id: string, index: number): void => {\n      if (e) {\n        e.stopPropagation();\n      }\n      markAboveAsReadMutation.mutate({\n        ids: allItemIds.slice(0, index + 1),\n        asUnread: false,\n      });\n    },\n    [markAboveAsReadMutation, allItemIds]\n  );\n\n  const onRenderCell = useCallback(\n    (item?: FeedItem, index?: number | undefined): React.ReactNode => {\n      if (typeof item === \"undefined\" || typeof index === \"undefined\") {\n        return null;\n      }\n      return (\n        <FeedItemComponent\n          {...item}\n          onAboveRead={onAboveRead}\n          key={item.id}\n          itemIndex={index}\n          isSelected={item.id === currenActivedFeedId}\n        />\n      );\n    },\n    [currenActivedFeedId, onAboveRead]\n  );\n\n  if (!isEmpty(items)) {\n    return (\n      <InfiniteScroll\n        getScrollParent={getScrollParent}\n        className={className}\n        initialLoad={false}\n        loadMore={fetchNextPage}\n        useWindow={false}\n        hasMore={hasNextPage && !isFetching}\n      >\n        <List<FeedItem>\n          items={items}\n          onRenderCell={onRenderCell}\n          usePageCache={true}\n        />\n        <div>\n          {isFetching ? (\n            <Spinner\n              label=\"loading\"\n              size={SpinnerSize.large}\n              styles={{ root: \"m-auto h-32\", circle: \"border-2\" }}\n            />\n          ) : null}\n        </div>\n      </InfiniteScroll>\n    );\n  } else {\n    if (isFetching) {\n      return (\n        <div className={`${className} h-full`}>\n          <FeedShimmer />\n        </div>\n      );\n    } else {\n      return (\n        <Stack className=\"text-center p-24\">\n          <FontIcon iconName=\"FangBody\" className=\"text-7xl\" />\n          <Text className=\"font-semibold text-xl\">Nothing Here</Text>\n        </Stack>\n      );\n    }\n  }\n};\n\nexport default React.memo(FeedPaneComponent, (prevProps, nextProps) => {\n  if (\n    prevProps.className !== nextProps.className ||\n    prevProps.items !== nextProps.items ||\n    prevProps.hasNextPage !== nextProps.hasNextPage ||\n    prevProps.isFetching !== nextProps.isFetching ||\n    prevProps.fetchNextPage !== nextProps.fetchNextPage ||\n    prevProps.getScrollParent !== nextProps.getScrollParent\n  ) {\n    return false;\n  } else {\n    return true;\n  }\n});\n","C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\home\\sideBarButton.tsx",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\utils\\useIntersectionObserver.ts",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\feedShimmer.tsx",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\feed\\feedItem.tsx",["188","189","190","191"],"C:\\Users\\lzh11\\Workspace\\fread\\src\\context\\article.ts",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\home\\Header.tsx",["192"],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\home\\AddFeed.tsx",["193","194"],"import {\n  TextField,\n  PrimaryButton,\n  DefaultButton,\n  Dropdown,\n  Label,\n  Stack,\n  IconButton,\n  IDropdownOption,\n} from \"@fluentui/react\";\nimport { NormalizedSchema } from \"normalizr\";\nimport React, { useState } from \"react\";\nimport { QueryKey, useMutation, useQueryClient } from \"react-query\";\nimport { default as api } from \"../../api\";\nimport { FolderEntity } from \"../feed/overviewPane\";\nimport { getTagNameFromId } from \"./../feed/overviewPane\";\n\nexport interface Props {\n  className?: string;\n  onCancel?: () => void;\n}\n\nconst AddFeed = (props: Props) => {\n  const [selectedFolder, setSelectedFolder] = useState<IDropdownOption>();\n  const queryClient = useQueryClient();\n\n  const getDropdownOptions = (): IDropdownOption[] => {\n    const tagList =\n      queryClient.getQueryData<NormalizedSchema<FolderEntity, string[]>>(\n        \"home/folderQuery\"\n      );\n    if (tagList) {\n      const tagResult = tagList.result;\n      const tagEntities = tagList.entities.folder;\n      return tagResult\n        .filter((key) => tagEntities[key].type === \"folder\")\n        .map((key) => ({\n          key: tagEntities[key].id,\n          text: getTagNameFromId(tagEntities[key].id),\n        }));\n    } else {\n      return [];\n    }\n  };\n\n  const addFeedMutation = useMutation(\n    ({ feedUrl, folderId }: { feedUrl: string; folderId: string }) =>\n      api.inoreader.addSubscription(`feed/${feedUrl}`, folderId),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"home/subscriptionsListQuery\");\n        queryClient.invalidateQueries(\"streamPreferences\");\n        queryClient.invalidateQueries(\"home/folderQuery\");\n      },\n      onError: (error) => {\n        alert(\"Failed\");\n      },\n    }\n  );\n\n  const handleDropdownChange = (\n    event: React.FormEvent<HTMLDivElement>,\n    option?: IDropdownOption,\n    index?: number\n  ) => {\n    setSelectedFolder(option);\n  };\n\n  const handleOnSubmit = (e?) => {\n    e.preventDefault();\n    const form = e.target;\n    const feedUrl = form[\"feedUrl\"].value;\n    addFeedMutation.mutate({ feedUrl, folderId: String(selectedFolder?.key) });\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit} className=\"h-full\">\n      <div className=\"p-8\">\n        <Stack className=\"mb-4\" horizontal>\n          <Label className=\"flex-1 text-xl\">Add new feed</Label>\n        </Stack>\n        <Stack>\n          <Label>RSS Url</Label>\n          <TextField\n            name=\"feedUrl\"\n            placeholder=\"rss url here\"\n            className=\"w-96 max-w-full mb-4\"\n            required\n          />\n          <Label>Folder to store the RSS</Label>\n          <Dropdown\n            selectedKey={selectedFolder ? selectedFolder.key : undefined}\n            options={getDropdownOptions()}\n            placeHolder=\"select a folder to categroy the feed\"\n            onChange={handleDropdownChange}\n          />\n        </Stack>\n      </div>\n      <Stack\n        className=\"px-8 py-6\"\n        horizontal\n        horizontalAlign=\"end\"\n        verticalAlign=\"center\"\n        tokens={{ childrenGap: \"16px\" }}\n      >\n        <Stack.Item grow={1}>\n          <DefaultButton\n            className=\"w-full\"\n            onClick={props.onCancel}\n            text=\"Cancel\"\n          />\n        </Stack.Item>\n        <Stack.Item grow={1}>\n          <PrimaryButton\n            className=\"w-full\"\n            disabled={addFeedMutation.isLoading}\n            type=\"submit\"\n            text=\"Add\"\n          />\n        </Stack.Item>\n      </Stack>\n    </form>\n  );\n};\n\nexport default AddFeed;\n","C:\\Users\\lzh11\\Workspace\\fread\\src\\component\\halfScreenPanel\\halfScreenPanel.tsx",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\context\\feed.ts",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\page\\home\\viewSettingPane.tsx",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\utils\\useSearchParma.tsx",[],"C:\\Users\\lzh11\\Workspace\\fread\\src\\component\\swipeout\\index.js",[],["195","196"],"C:\\Users\\lzh11\\Workspace\\fread\\src\\api\\mockData.ts",["197","198","199"],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":71,"column":9,"nodeType":"206","messageId":"207","endLine":71,"endColumn":32},{"ruleId":"204","severity":1,"message":"208","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":23},{"ruleId":"209","severity":1,"message":"210","line":10,"column":6,"nodeType":"211","endLine":10,"endColumn":8,"suggestions":"212"},{"ruleId":"204","severity":1,"message":"213","line":21,"column":8,"nodeType":"206","messageId":"207","endLine":21,"endColumn":16},{"ruleId":"204","severity":1,"message":"214","line":27,"column":11,"nodeType":"206","messageId":"207","endLine":27,"endColumn":21},{"ruleId":"204","severity":1,"message":"215","line":17,"column":8,"nodeType":"206","messageId":"207","endLine":17,"endColumn":21},{"ruleId":"204","severity":1,"message":"216","line":46,"column":9,"nodeType":"206","messageId":"207","endLine":46,"endColumn":31},{"ruleId":"204","severity":1,"message":"217","line":64,"column":9,"nodeType":"206","messageId":"207","endLine":64,"endColumn":31},{"ruleId":"204","severity":1,"message":"218","line":76,"column":9,"nodeType":"206","messageId":"207","endLine":76,"endColumn":20},{"ruleId":"204","severity":1,"message":"219","line":7,"column":3,"nodeType":"206","messageId":"207","endLine":7,"endColumn":19},{"ruleId":"204","severity":1,"message":"214","line":18,"column":11,"nodeType":"206","messageId":"207","endLine":18,"endColumn":21},{"ruleId":"204","severity":1,"message":"220","line":10,"column":3,"nodeType":"206","messageId":"207","endLine":10,"endColumn":7},{"ruleId":"204","severity":1,"message":"221","line":62,"column":9,"nodeType":"206","messageId":"207","endLine":62,"endColumn":17},{"ruleId":"204","severity":1,"message":"222","line":12,"column":26,"nodeType":"206","messageId":"207","endLine":12,"endColumn":52},{"ruleId":"204","severity":1,"message":"223","line":2,"column":20,"nodeType":"206","messageId":"207","endLine":2,"endColumn":29},{"ruleId":"204","severity":1,"message":"224","line":43,"column":15,"nodeType":"206","messageId":"207","endLine":43,"endColumn":23},{"ruleId":"204","severity":1,"message":"225","line":1,"column":42,"nodeType":"206","messageId":"207","endLine":1,"endColumn":48},{"ruleId":"204","severity":1,"message":"226","line":1,"column":50,"nodeType":"206","messageId":"207","endLine":1,"endColumn":59},{"ruleId":"204","severity":1,"message":"227","line":4,"column":3,"nodeType":"206","messageId":"207","endLine":4,"endColumn":13},{"ruleId":"204","severity":1,"message":"228","line":16,"column":8,"nodeType":"206","messageId":"207","endLine":16,"endColumn":19},{"ruleId":"204","severity":1,"message":"229","line":29,"column":9,"nodeType":"206","messageId":"207","endLine":29,"endColumn":27},{"ruleId":"204","severity":1,"message":"227","line":8,"column":3,"nodeType":"206","messageId":"207","endLine":8,"endColumn":13},{"ruleId":"204","severity":1,"message":"230","line":13,"column":10,"nodeType":"206","messageId":"207","endLine":13,"endColumn":18},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"231","line":93,"column":7,"nodeType":"206","messageId":"207","endLine":93,"endColumn":22},{"ruleId":"204","severity":1,"message":"232","line":98,"column":7,"nodeType":"206","messageId":"207","endLine":98,"endColumn":19},{"ruleId":"204","severity":1,"message":"233","line":104,"column":7,"nodeType":"206","messageId":"207","endLine":104,"endColumn":25},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"@typescript-eslint/no-unused-vars","'loaddingAnimationRender' is assigned a value but never used.","Identifier","unusedVar","'NeutralColors' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggle'. Either include it or remove the dependency array.","ArrayExpression",["236"],"'BookFilp' is defined but never used.","'isDarkMode' is assigned a value but never used.","'SideBarButton' is defined but never used.","'subscriptionsListQuery' is assigned a value but never used.","'streamPreferencesQuery' is assigned a value but never used.","'folderQuery' is assigned a value but never used.","'ICommandBarProps' is defined but never used.","'Text' is defined but never used.","'commonPx' is assigned a value but never used.","'CurrenActivedFeedIdContext' is defined but never used.","'FeedProps' is defined but never used.","'viewType' is assigned a value but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'IconButton' is defined but never used.","'queryString' is defined but never used.","'handleHomeBtnClick' is assigned a value but never used.","'QueryKey' is defined but never used.","'isVaildStreamId' is assigned a value but never used.","'isVaildTagId' is assigned a value but never used.","'isVaildSystemTagId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},"Update the dependencies array to be: [toggle]",{"range":"239","text":"240"},[230,232],"[toggle]"]